{"version":3,"sources":["index.tsx"],"names":["getOutputRange","width","isReversed","ShimmerPlaceholder","React","memo","props","reverseLoop","animatedValue","paused","visible","value","duration","easing","Easing","ease","BasedShimmerPlaceholder","shimmerColors","location","style","contentStyle","shimmerStyle","LinearGradient","View","children","shimmerWidthPercent","containerProps","shimmerContainerProps","childrenContainerProps","parseFloat","animatedStyle","linearTranslate","transform","translateX","styles","container","height","opacity","shimmer","backgroundColor","flex","x","y","StyleSheet","create","overflow"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { StyleSheet, View, ViewProps, ViewStyle } from \"react-native\";\nimport Animated, { Easing, interpolate, useAnimatedStyle, useSharedValue, withRepeat, withTiming } from \"react-native-reanimated\";\nimport { withPause } from \"react-native-redash\";\n\ninterface IProps {\n    reverseLoop?: boolean;\n    style?: ViewStyle;\n    contentStyle?: ViewStyle;\n    shimmerStyle?: ViewStyle;\n    shimmerColors?: string[];\n    isReversed?: boolean;\n    visible: boolean;\n    location?: number[];\n    LinearGradient: any;\n    children: React.ReactChildren | React.ReactChild;\n    shimmerWidthPercent?: number;\n    containerProps?: ViewProps;\n    shimmerContainerProps?: ViewProps;\n    childrenContainerProps?: ViewProps;\n}\n\nconst getOutputRange = (width: number, isReversed: boolean) => {\n    'worklet';\n    return isReversed ? [width, -width] : [-width, width];\n}\n\nconst ShimmerPlaceholder = React.memo((props: IProps) => {\n    const { reverseLoop = true } = props;\n    const animatedValue = useSharedValue<number>(-1);\n    const paused = useSharedValue(props.visible);\n\n    useEffect(() => {\n        paused.value = props.visible;\n    }, [props.visible, paused]);\n\n    useEffect(() => {\n        animatedValue.value = -1;\n        animatedValue.value = withPause(\n            withRepeat(\n                withTiming(1,\n                    {\n                        duration: 1000,\n                        easing: Easing.ease\n                    }\n                ),\n                -1,\n                reverseLoop\n            ),\n            paused\n        );\n    }, [animatedValue, paused, reverseLoop]);\n\n    return (\n        <BasedShimmerPlaceholder\n            {...props}\n            animatedValue={animatedValue}\n        />\n    );\n});\n\ninterface IBasedProps extends IProps {\n    animatedValue: Animated.SharedValue<number | null>\n}\n\nconst BasedShimmerPlaceholder = (props: IBasedProps) => {\n    const {\n        shimmerColors = [\"#ebebeb\", \"#c5c5c5\", \"#ebebeb\"],\n        isReversed = false,\n        visible,\n        location = [0.3, 0.5, 0.7],\n        style,\n        contentStyle,\n        shimmerStyle,\n        LinearGradient = View,\n        children,\n        animatedValue,\n        shimmerWidthPercent = 1,\n        containerProps,\n        shimmerContainerProps,\n        childrenContainerProps,\n    } = props;\n\n    const width = parseFloat(`${shimmerStyle?.width ?? 0}`);\n\n    const animatedStyle = useAnimatedStyle(() => {\n        const linearTranslate = interpolate(\n            animatedValue.value ?? -1,\n            [-1, 1],\n            getOutputRange(width, isReversed),\n        );\n        return {\n            transform: [\n                { translateX: linearTranslate }\n            ]\n        }\n    });\n\n\n\n    return (\n        <View\n            style={[\n                styles.container,\n                !visible && shimmerStyle,\n                style,\n            ]}\n            {...containerProps}\n        >\n            {/* Force render children to restrict rendering twice */}\n            <View\n                style={[\n                    !visible && { width: 0, height: 0, opacity: 0 },\n                    visible && contentStyle,\n                ]}\n                {...childrenContainerProps}\n            >\n                {children}\n            </View>\n            {!visible && (\n                <View\n                    style={[styles.shimmer, { backgroundColor: shimmerColors[0] }]}\n                    {...shimmerContainerProps}\n                >\n                    <Animated.View\n                        style={[styles.shimmer, animatedStyle]}\n                    >\n                        <LinearGradient\n                            colors={shimmerColors}\n                            style={{ flex: 1, width: width * shimmerWidthPercent }}\n                            start={{\n                                x: -1,\n                                y: 0.5,\n                            }}\n                            end={{\n                                x: 2,\n                                y: 0.5,\n                            }}\n                            locations={location}\n                        />\n                    </Animated.View>\n                </View>\n            )}\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        overflow: \"hidden\",\n    },\n    shimmer: {\n        flex: 1,\n    }\n});\n\nexport default ShimmerPlaceholder;\n"]}