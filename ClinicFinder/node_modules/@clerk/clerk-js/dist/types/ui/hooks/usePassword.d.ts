import type { PasswordSettingsData } from '@clerk/types';
import type { FormControlState } from '../utils';
type UsePasswordConfig = PasswordSettingsData & {
    validatePassword: boolean;
};
type UsePasswordCbs = {
    onValidationFailed?: (errorMessage: string | undefined) => void;
    onValidationSuccess?: () => void;
    onValidationWarning?: (warningMessage: string) => void;
    onValidationComplexity?: (b: boolean) => void;
};
export declare const MIN_PASSWORD_LENGTH = 8;
export declare const usePassword: (config: UsePasswordConfig, callbacks?: UsePasswordCbs) => {
    setPassword: (password: string) => void;
};
export declare const useConfirmPassword: ({ passwordField, confirmPasswordField, }: {
    passwordField: FormControlState;
    confirmPasswordField: FormControlState;
}) => {
    displayConfirmPasswordFeedback: (password: string) => void;
    isPasswordMatch: boolean;
};
export {};
