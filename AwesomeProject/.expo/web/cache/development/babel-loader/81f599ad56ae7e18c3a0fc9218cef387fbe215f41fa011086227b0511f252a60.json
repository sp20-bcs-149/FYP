{"ast":null,"code":"'use strict';\n\nfunction __fetchSegment(segmentId, options, callback) {\n  var SegmentFetcher = require(\"./SegmentFetcher/NativeSegmentFetcher\").default;\n  SegmentFetcher.fetchSegment(segmentId, options, function (errorObject) {\n    if (errorObject) {\n      var error = new Error(errorObject.message);\n      error.code = errorObject.code;\n      callback(error);\n    }\n    callback(null);\n  });\n}\nglobal.__fetchSegment = __fetchSegment;\nfunction __getSegment(segmentId, options, callback) {\n  var SegmentFetcher = require(\"./SegmentFetcher/NativeSegmentFetcher\").default;\n  if (!SegmentFetcher.getSegment) {\n    throw new Error('SegmentFetcher.getSegment must be defined');\n  }\n  SegmentFetcher.getSegment(segmentId, options, function (errorObject, path) {\n    if (errorObject) {\n      var error = new Error(errorObject.message);\n      error.code = errorObject.code;\n      callback(error);\n    }\n    callback(null, path);\n  });\n}\nglobal.__getSegment = __getSegment;","map":{"version":3,"names":["__fetchSegment","segmentId","options","callback","SegmentFetcher","require","default","fetchSegment","errorObject","error","Error","message","code","global","__getSegment","getSegment","path"],"sources":["E:/4 -ReactNative/Final-Year-Project/FYP3/AwesomeProject/node_modules/react-native/Libraries/Core/setUpSegmentFetcher.js"],"sourcesContent":["/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow strict-local\r\n * @format\r\n */\r\n\r\n'use strict';\r\n\r\nexport type FetchSegmentFunction = typeof __fetchSegment;\r\nexport type GetSegmentFunction = typeof __getSegment;\r\n\r\n/**\r\n * Set up SegmentFetcher.\r\n * You can use this module directly, or just require InitializeCore.\r\n */\r\n\r\nfunction __fetchSegment(\r\n  segmentId: number,\r\n  options: $ReadOnly<{\r\n    otaBuildNumber: ?string,\r\n    requestedModuleName: string,\r\n    segmentHash: string,\r\n  }>,\r\n  callback: (?Error) => void,\r\n) {\r\n  const SegmentFetcher =\r\n    require('./SegmentFetcher/NativeSegmentFetcher').default;\r\n  SegmentFetcher.fetchSegment(\r\n    segmentId,\r\n    options,\r\n    (\r\n      errorObject: ?{\r\n        message: string,\r\n        code: string,\r\n        ...\r\n      },\r\n    ) => {\r\n      if (errorObject) {\r\n        const error = new Error(errorObject.message);\r\n        (error: any).code = errorObject.code; // flowlint-line unclear-type: off\r\n        callback(error);\r\n      }\r\n\r\n      callback(null);\r\n    },\r\n  );\r\n}\r\n\r\nglobal.__fetchSegment = __fetchSegment;\r\n\r\nfunction __getSegment(\r\n  segmentId: number,\r\n  options: $ReadOnly<{\r\n    otaBuildNumber: ?string,\r\n    requestedModuleName: string,\r\n    segmentHash: string,\r\n  }>,\r\n  callback: (?Error, ?string) => void,\r\n) {\r\n  const SegmentFetcher =\r\n    require('./SegmentFetcher/NativeSegmentFetcher').default;\r\n\r\n  if (!SegmentFetcher.getSegment) {\r\n    throw new Error('SegmentFetcher.getSegment must be defined');\r\n  }\r\n\r\n  SegmentFetcher.getSegment(\r\n    segmentId,\r\n    options,\r\n    (\r\n      errorObject: ?{\r\n        message: string,\r\n        code: string,\r\n        ...\r\n      },\r\n      path: ?string,\r\n    ) => {\r\n      if (errorObject) {\r\n        const error = new Error(errorObject.message);\r\n        (error: any).code = errorObject.code; // flowlint-line unclear-type: off\r\n        callback(error);\r\n      }\r\n\r\n      callback(null, path);\r\n    },\r\n  );\r\n}\r\n\r\nglobal.__getSegment = __getSegment;\r\n"],"mappings":"AAUA,YAAY;;AAUZ,SAASA,cAAcA,CACrBC,SAAiB,EACjBC,OAIE,EACFC,QAA0B,EAC1B;EACA,IAAMC,cAAc,GAClBC,OAAO,wCAAwC,CAAC,CAACC,OAAO;EAC1DF,cAAc,CAACG,YAAY,CACzBN,SAAS,EACTC,OAAO,EACP,UACEM,WAIC,EACE;IACH,IAAIA,WAAW,EAAE;MACf,IAAMC,KAAK,GAAG,IAAIC,KAAK,CAACF,WAAW,CAACG,OAAO,CAAC;MAC3CF,KAAK,CAAOG,IAAI,GAAGJ,WAAW,CAACI,IAAI;MACpCT,QAAQ,CAACM,KAAK,CAAC;IACjB;IAEAN,QAAQ,CAAC,IAAI,CAAC;EAChB,CACF,CAAC;AACH;AAEAU,MAAM,CAACb,cAAc,GAAGA,cAAc;AAEtC,SAASc,YAAYA,CACnBb,SAAiB,EACjBC,OAIE,EACFC,QAAmC,EACnC;EACA,IAAMC,cAAc,GAClBC,OAAO,wCAAwC,CAAC,CAACC,OAAO;EAE1D,IAAI,CAACF,cAAc,CAACW,UAAU,EAAE;IAC9B,MAAM,IAAIL,KAAK,CAAC,2CAA2C,CAAC;EAC9D;EAEAN,cAAc,CAACW,UAAU,CACvBd,SAAS,EACTC,OAAO,EACP,UACEM,WAIC,EACDQ,IAAa,EACV;IACH,IAAIR,WAAW,EAAE;MACf,IAAMC,KAAK,GAAG,IAAIC,KAAK,CAACF,WAAW,CAACG,OAAO,CAAC;MAC3CF,KAAK,CAAOG,IAAI,GAAGJ,WAAW,CAACI,IAAI;MACpCT,QAAQ,CAACM,KAAK,CAAC;IACjB;IAEAN,QAAQ,CAAC,IAAI,EAAEa,IAAI,CAAC;EACtB,CACF,CAAC;AACH;AAEAH,MAAM,CAACC,YAAY,GAAGA,YAAY"},"metadata":{},"sourceType":"script","externalDependencies":[]}