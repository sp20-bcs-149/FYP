{"ast":null,"code":"var UIManager = global.RN$Bridgeless === true ? require(\"./BridgelessUIManager\") : require(\"./PaperUIManager\");\nmodule.exports = UIManager;","map":{"version":3,"names":["UIManager","global","RN$Bridgeless","require","module","exports"],"sources":["E:/4 -ReactNative/Final-Year-Project/FYP3/AwesomeProject/node_modules/react-native/Libraries/ReactNative/UIManager.js"],"sourcesContent":["/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n * @format\r\n */\r\n\r\nimport type {RootTag} from '../Types/RootTagTypes';\r\nimport type {Spec} from './NativeUIManager';\r\n\r\nexport interface UIManagerJSInterface extends Spec {\r\n  +getViewManagerConfig: (viewManagerName: string) => Object;\r\n  +hasViewManagerConfig: (viewManagerName: string) => boolean;\r\n  +createView: (\r\n    reactTag: ?number,\r\n    viewName: string,\r\n    rootTag: RootTag,\r\n    props: Object,\r\n  ) => void;\r\n  +updateView: (reactTag: number, viewName: string, props: Object) => void;\r\n  +manageChildren: (\r\n    containerTag: ?number,\r\n    moveFromIndices: Array<number>,\r\n    moveToIndices: Array<number>,\r\n    addChildReactTags: Array<number>,\r\n    addAtIndices: Array<number>,\r\n    removeAtIndices: Array<number>,\r\n  ) => void;\r\n}\r\n\r\nconst UIManager: UIManagerJSInterface =\r\n  global.RN$Bridgeless === true\r\n    ? require('./BridgelessUIManager')\r\n    : require('./PaperUIManager');\r\n\r\nmodule.exports = UIManager;\r\n"],"mappings":"AAiCA,IAAMA,SAA+B,GACnCC,MAAM,CAACC,aAAa,KAAK,IAAI,GACzBC,OAAO,wBAAwB,CAAC,GAChCA,OAAO,mBAAmB,CAAC;AAEjCC,MAAM,CAACC,OAAO,GAAGL,SAAS"},"metadata":{},"sourceType":"script","externalDependencies":[]}