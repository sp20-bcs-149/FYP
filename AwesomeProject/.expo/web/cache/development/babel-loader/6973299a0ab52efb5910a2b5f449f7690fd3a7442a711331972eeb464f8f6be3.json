{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport GoogleMapViewFull from \"../../components/user/findClinic/search/GoogleMapViewFull\";\nimport SearchBar from \"../../components/user/findClinic/search/SearchBar\";\nimport { UserLocationContext } from \"../../Context/UserLocationContext\";\nimport GlobalApi from \"../../services/GlobalApi\";\nimport BusinessList from \"../../components/user/findClinic/search/BusinessItem\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Search(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    placeList = _useState2[0],\n    setPlaceList = _useState2[1];\n  var _useContext = useContext(UserLocationContext),\n    location = _useContext.location,\n    setLocation = _useContext.setLocation;\n  useEffect(function () {\n    GetNearBySearchPlace(\"Vaccination Center\");\n  }, []);\n  var GetNearBySearchPlace = function GetNearBySearchPlace(value) {\n    GlobalApi.searchByText(value).then(function (resp) {\n      setPlaceList(resp.data.results);\n    });\n  };\n  return _jsxs(View, {\n    children: [_jsx(View, {\n      style: {\n        position: \"absolute\",\n        zIndex: 20\n      },\n      children: _jsx(SearchBar, {\n        setSearchText: function setSearchText(value) {\n          return GetNearBySearchPlace(value);\n        }\n      })\n    }), _jsx(GoogleMapViewFull, {\n      placeList: placeList\n    }), _jsx(View, {\n      style: {\n        position: \"absolute\",\n        zIndex: 20,\n        bottom: 0\n      },\n      children: _jsx(BusinessList, {\n        placeList: placeList,\n        navigation: navigation\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useContext","useEffect","useState","GoogleMapViewFull","SearchBar","UserLocationContext","GlobalApi","BusinessList","jsx","_jsx","jsxs","_jsxs","Search","_ref","navigation","_useState","_useState2","_slicedToArray","placeList","setPlaceList","_useContext","location","setLocation","GetNearBySearchPlace","value","searchByText","then","resp","data","results","View","children","style","position","zIndex","setSearchText","bottom"],"sources":["E:/4 -ReactNative/Final-Year-Project/FYP3/AwesomeProject/Screen/user/Search.js"],"sourcesContent":["import { View, Text } from \"react-native\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport GoogleMapViewFull from \"../../components/user/findClinic/search/GoogleMapViewFull\";\r\nimport SearchBar from \"../../components/user/findClinic/search/SearchBar\";\r\nimport { UserLocationContext } from \"../../Context/UserLocationContext\";\r\nimport GlobalApi from \"../../services/GlobalApi\";\r\nimport BusinessList from \"../../components/user/findClinic/search/BusinessItem\";\r\n\r\nexport default function Search({navigation}) {\r\n  const [placeList, setPlaceList] = useState([]);\r\n  const { location, setLocation } = useContext(UserLocationContext);\r\n\r\n  useEffect(() => {\r\n    GetNearBySearchPlace(\"Vaccination Center\");\r\n  }, []);\r\n  const GetNearBySearchPlace = (value) => {\r\n    GlobalApi.searchByText(value).then((resp) => {\r\n      setPlaceList(resp.data.results);\r\n    });\r\n  };\r\n  return (\r\n    <View>\r\n      <View style={{ position: \"absolute\", zIndex: 20 }}>\r\n        <SearchBar setSearchText={(value) => GetNearBySearchPlace(value)} />\r\n      </View>\r\n\r\n      <GoogleMapViewFull placeList={placeList} />\r\n      <View style={{ position: \"absolute\", zIndex: 20, bottom: 0 }}>\r\n        <BusinessList placeList={placeList} navigation={navigation} />\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":";;;AACA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,OAAOC,iBAAiB;AACxB,OAAOC,SAAS;AAChB,SAASC,mBAAmB;AAC5B,OAAOC,SAAS;AAChB,OAAOC,YAAY;AAA6D,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEhF,eAAe,SAASC,MAAMA,CAAAC,IAAA,EAAe;EAAA,IAAbC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EACxC,IAAAC,SAAA,GAAkCb,QAAQ,CAAC,EAAE,CAAC;IAAAc,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAvCG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAC9B,IAAAI,WAAA,GAAkCpB,UAAU,CAACK,mBAAmB,CAAC;IAAzDgB,QAAQ,GAAAD,WAAA,CAARC,QAAQ;IAAEC,WAAW,GAAAF,WAAA,CAAXE,WAAW;EAE7BrB,SAAS,CAAC,YAAM;IACdsB,oBAAoB,CAAC,oBAAoB,CAAC;EAC5C,CAAC,EAAE,EAAE,CAAC;EACN,IAAMA,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAIC,KAAK,EAAK;IACtClB,SAAS,CAACmB,YAAY,CAACD,KAAK,CAAC,CAACE,IAAI,CAAC,UAACC,IAAI,EAAK;MAC3CR,YAAY,CAACQ,IAAI,CAACC,IAAI,CAACC,OAAO,CAAC;IACjC,CAAC,CAAC;EACJ,CAAC;EACD,OACElB,KAAA,CAACmB,IAAI;IAAAC,QAAA,GACHtB,IAAA,CAACqB,IAAI;MAACE,KAAK,EAAE;QAAEC,QAAQ,EAAE,UAAU;QAAEC,MAAM,EAAE;MAAG,CAAE;MAAAH,QAAA,EAChDtB,IAAA,CAACL,SAAS;QAAC+B,aAAa,EAAE,SAAAA,cAACX,KAAK;UAAA,OAAKD,oBAAoB,CAACC,KAAK,CAAC;QAAA;MAAC,CAAE;IAAC,CAChE,CAAC,EAEPf,IAAA,CAACN,iBAAiB;MAACe,SAAS,EAAEA;IAAU,CAAE,CAAC,EAC3CT,IAAA,CAACqB,IAAI;MAACE,KAAK,EAAE;QAAEC,QAAQ,EAAE,UAAU;QAAEC,MAAM,EAAE,EAAE;QAAEE,MAAM,EAAE;MAAE,CAAE;MAAAL,QAAA,EAC3DtB,IAAA,CAACF,YAAY;QAACW,SAAS,EAAEA,SAAU;QAACJ,UAAU,EAAEA;MAAW,CAAE;IAAC,CAC1D,CAAC;EAAA,CACH,CAAC;AAEX"},"metadata":{},"sourceType":"module","externalDependencies":[]}