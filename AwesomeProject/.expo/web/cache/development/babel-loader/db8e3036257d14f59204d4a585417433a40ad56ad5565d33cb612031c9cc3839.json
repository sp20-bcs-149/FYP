{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"color\", \"subtitle\", \"subtitleStyle\", \"onPress\", \"disabled\", \"style\", \"titleRef\", \"titleStyle\", \"title\", \"mode\", \"theme\", \"testID\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport color from 'color';\nimport { useInternalTheme } from \"../../core/theming\";\nimport { white } from \"../../styles/themes/v2/colors\";\nimport Text from \"../Typography/Text\";\nimport { modeTextVariant } from \"./utils\";\nvar AppbarContent = function AppbarContent(_ref) {\n  var titleColor = _ref.color,\n    subtitle = _ref.subtitle,\n    subtitleStyle = _ref.subtitleStyle,\n    onPress = _ref.onPress,\n    disabled = _ref.disabled,\n    style = _ref.style,\n    titleRef = _ref.titleRef,\n    titleStyle = _ref.titleStyle,\n    title = _ref.title,\n    _ref$mode = _ref.mode,\n    mode = _ref$mode === void 0 ? 'small' : _ref$mode,\n    themeOverrides = _ref.theme,\n    _ref$testID = _ref.testID,\n    testID = _ref$testID === void 0 ? 'appbar-content' : _ref$testID,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var theme = useInternalTheme(themeOverrides);\n  var isV3 = theme.isV3,\n    colors = theme.colors;\n  var titleTextColor = titleColor ? titleColor : isV3 ? colors.onSurface : white;\n  var subtitleColor = color(titleTextColor).alpha(0.7).rgb().string();\n  var modeContainerStyles = {\n    small: styles.v3DefaultContainer,\n    medium: styles.v3MediumContainer,\n    large: styles.v3LargeContainer,\n    'center-aligned': styles.v3DefaultContainer\n  };\n  var variant = modeTextVariant[mode];\n  var content = React.createElement(View, _extends({\n    pointerEvents: \"box-none\",\n    style: [styles.container, isV3 && modeContainerStyles[mode], style],\n    testID: testID\n  }, rest), typeof title === 'string' ? React.createElement(Text, _extends({}, isV3 && {\n    variant: variant\n  }, {\n    ref: titleRef,\n    style: [_objectSpread({\n      color: titleTextColor\n    }, isV3 ? theme.fonts[variant] : Platform.OS === 'ios' ? theme.fonts.regular : theme.fonts.medium), !isV3 && styles.title, titleStyle],\n    numberOfLines: 1,\n    accessible: true,\n    accessibilityRole: onPress ? 'none' : Platform.OS === 'web' ? 'heading' : 'header',\n    accessibilityTraits: \"header\",\n    testID: testID + \"-title-text\"\n  }), title) : title, !isV3 && subtitle ? React.createElement(Text, {\n    style: [styles.subtitle, {\n      color: subtitleColor\n    }, subtitleStyle],\n    numberOfLines: 1\n  }, subtitle) : null);\n  if (onPress) {\n    return React.createElement(TouchableWithoutFeedback, {\n      accessibilityRole: touchableRole,\n      accessibilityTraits: touchableRole,\n      accessibilityComponentType: \"button\",\n      onPress: onPress,\n      disabled: disabled\n    }, content);\n  }\n  return content;\n};\nAppbarContent.displayName = 'Appbar.Content';\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 12\n  },\n  v3DefaultContainer: {\n    paddingHorizontal: 0\n  },\n  v3MediumContainer: {\n    paddingHorizontal: 0,\n    justifyContent: 'flex-end',\n    paddingBottom: 24\n  },\n  v3LargeContainer: {\n    paddingHorizontal: 0,\n    paddingTop: 36,\n    justifyContent: 'flex-end',\n    paddingBottom: 28\n  },\n  title: {\n    fontSize: Platform.OS === 'ios' ? 17 : 20\n  },\n  subtitle: {\n    fontSize: Platform.OS === 'ios' ? 11 : 14\n  }\n});\nvar iosTouchableRole = ['button', 'header'];\nvar touchableRole = Platform.select({\n  ios: iosTouchableRole,\n  default: iosTouchableRole[0]\n});\nexport default AppbarContent;\nexport { AppbarContent };","map":{"version":3,"names":["React","Platform","StyleSheet","TouchableWithoutFeedback","View","color","useInternalTheme","white","Text","modeTextVariant","AppbarContent","_ref","titleColor","subtitle","subtitleStyle","onPress","disabled","style","titleRef","titleStyle","title","_ref$mode","mode","themeOverrides","theme","_ref$testID","testID","rest","_objectWithoutProperties","_excluded","isV3","colors","titleTextColor","onSurface","subtitleColor","alpha","rgb","string","modeContainerStyles","small","styles","v3DefaultContainer","medium","v3MediumContainer","large","v3LargeContainer","variant","content","createElement","_extends","pointerEvents","container","ref","_objectSpread","fonts","OS","regular","numberOfLines","accessible","accessibilityRole","accessibilityTraits","touchableRole","accessibilityComponentType","displayName","create","flex","paddingHorizontal","justifyContent","paddingBottom","paddingTop","fontSize","iosTouchableRole","select","ios","default"],"sources":["E:\\4 -ReactNative\\Final-Year-Project\\FYP3\\AwesomeProject\\node_modules\\react-native-paper\\src\\components\\Appbar\\AppbarContent.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport {\r\n  AccessibilityRole,\r\n  GestureResponderEvent,\r\n  Platform,\r\n  StyleProp,\r\n  StyleSheet,\r\n  TextStyle,\r\n  TouchableWithoutFeedback,\r\n  View,\r\n  ViewStyle,\r\n} from 'react-native';\r\n\r\nimport color from 'color';\r\n\r\nimport { useInternalTheme } from '../../core/theming';\r\nimport { white } from '../../styles/themes/v2/colors';\r\nimport type { $RemoveChildren, MD3TypescaleKey, ThemeProp } from '../../types';\r\nimport Text, { TextRef } from '../Typography/Text';\r\nimport { modeTextVariant } from './utils';\r\n\r\ntype TitleString = {\r\n  title: string;\r\n  titleStyle?: StyleProp<TextStyle>;\r\n};\r\n\r\ntype TitleElement = { title: React.ReactNode; titleStyle?: never };\r\n\r\nexport type Props = $RemoveChildren<typeof View> & {\r\n  // For `title` and `titleStyle` props their types are duplicated due to the generation of documentation.\r\n  // Appropriate type for them are either `TitleString` or `TitleElement`, depends on `title` type.\r\n  /**\r\n   * Text or component for the title.\r\n   */\r\n  title: React.ReactNode;\r\n  /**\r\n   * Style for the title, if `title` is a string.\r\n   */\r\n  titleStyle?: StyleProp<TextStyle>;\r\n  /**\r\n   * Reference for the title.\r\n   */\r\n  titleRef?: React.RefObject<TextRef>;\r\n  /**\r\n   * @deprecated Deprecated in v5.x\r\n   * Text for the subtitle.\r\n   */\r\n  subtitle?: React.ReactNode;\r\n  /**\r\n   * @deprecated Deprecated in v5.x\r\n   * Style for the subtitle.\r\n   */\r\n  subtitleStyle?: StyleProp<TextStyle>;\r\n  /**\r\n   * Function to execute on press.\r\n   */\r\n  onPress?: (e: GestureResponderEvent) => void;\r\n  /**\r\n   * If true, disable all interactions for this component.\r\n   */\r\n  disabled?: boolean;\r\n  /**\r\n   * Custom color for the text.\r\n   */\r\n  color?: string;\r\n  /**\r\n   * @internal\r\n   */\r\n  mode?: 'small' | 'medium' | 'large' | 'center-aligned';\r\n  style?: StyleProp<ViewStyle>;\r\n  /**\r\n   * @optional\r\n   */\r\n  theme?: ThemeProp;\r\n  /**\r\n   * testID to be used on tests.\r\n   */\r\n  testID?: string;\r\n} & (TitleString | TitleElement);\r\n\r\n/**\r\n * A component used to display a title and optional subtitle in an appbar.\r\n *\r\n * <div class=\"screenshots\">\r\n *   <img class=\"small\" src=\"screenshots/appbar-content.png\" />\r\n * </div>\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { Appbar } from 'react-native-paper';\r\n *\r\n * const MyComponent = () => (\r\n *     <Appbar.Header>\r\n *        <Appbar.Content title=\"Title\" />\r\n *     </Appbar.Header>\r\n * );\r\n *\r\n * export default MyComponent;\r\n * ```\r\n */\r\nconst AppbarContent = ({\r\n  color: titleColor,\r\n  subtitle,\r\n  subtitleStyle,\r\n  onPress,\r\n  disabled,\r\n  style,\r\n  titleRef,\r\n  titleStyle,\r\n  title,\r\n  mode = 'small',\r\n  theme: themeOverrides,\r\n  testID = 'appbar-content',\r\n  ...rest\r\n}: Props) => {\r\n  const theme = useInternalTheme(themeOverrides);\r\n  const { isV3, colors } = theme;\r\n\r\n  const titleTextColor = titleColor\r\n    ? titleColor\r\n    : isV3\r\n    ? colors.onSurface\r\n    : white;\r\n\r\n  const subtitleColor = color(titleTextColor).alpha(0.7).rgb().string();\r\n\r\n  const modeContainerStyles = {\r\n    small: styles.v3DefaultContainer,\r\n    medium: styles.v3MediumContainer,\r\n    large: styles.v3LargeContainer,\r\n    'center-aligned': styles.v3DefaultContainer,\r\n  };\r\n\r\n  const variant = modeTextVariant[mode] as MD3TypescaleKey;\r\n\r\n  const content = (\r\n    <View\r\n      pointerEvents=\"box-none\"\r\n      style={[styles.container, isV3 && modeContainerStyles[mode], style]}\r\n      testID={testID}\r\n      {...rest}\r\n    >\r\n      {typeof title === 'string' ? (\r\n        <Text\r\n          {...(isV3 && { variant })}\r\n          ref={titleRef}\r\n          style={[\r\n            {\r\n              color: titleTextColor,\r\n              ...(isV3\r\n                ? theme.fonts[variant]\r\n                : Platform.OS === 'ios'\r\n                ? theme.fonts.regular\r\n                : theme.fonts.medium),\r\n            },\r\n            !isV3 && styles.title,\r\n            titleStyle,\r\n          ]}\r\n          numberOfLines={1}\r\n          accessible\r\n          accessibilityRole={\r\n            onPress\r\n              ? 'none'\r\n              : Platform.OS === 'web'\r\n              ? ('heading' as 'header')\r\n              : 'header'\r\n          }\r\n          // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\r\n          accessibilityTraits=\"header\"\r\n          testID={`${testID}-title-text`}\r\n        >\r\n          {title}\r\n        </Text>\r\n      ) : (\r\n        title\r\n      )}\r\n      {!isV3 && subtitle ? (\r\n        <Text\r\n          style={[styles.subtitle, { color: subtitleColor }, subtitleStyle]}\r\n          numberOfLines={1}\r\n        >\r\n          {subtitle}\r\n        </Text>\r\n      ) : null}\r\n    </View>\r\n  );\r\n\r\n  if (onPress) {\r\n    return (\r\n      // eslint-disable-next-line react-native-a11y/has-accessibility-props\r\n      <TouchableWithoutFeedback\r\n        accessibilityRole={touchableRole}\r\n        // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\r\n        accessibilityTraits={touchableRole}\r\n        accessibilityComponentType=\"button\"\r\n        onPress={onPress}\r\n        disabled={disabled}\r\n      >\r\n        {content}\r\n      </TouchableWithoutFeedback>\r\n    );\r\n  }\r\n\r\n  return content;\r\n};\r\n\r\nAppbarContent.displayName = 'Appbar.Content';\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    paddingHorizontal: 12,\r\n  },\r\n  v3DefaultContainer: {\r\n    paddingHorizontal: 0,\r\n  },\r\n  v3MediumContainer: {\r\n    paddingHorizontal: 0,\r\n    justifyContent: 'flex-end',\r\n    paddingBottom: 24,\r\n  },\r\n  v3LargeContainer: {\r\n    paddingHorizontal: 0,\r\n    paddingTop: 36,\r\n    justifyContent: 'flex-end',\r\n    paddingBottom: 28,\r\n  },\r\n  title: {\r\n    fontSize: Platform.OS === 'ios' ? 17 : 20,\r\n  },\r\n  subtitle: {\r\n    fontSize: Platform.OS === 'ios' ? 11 : 14,\r\n  },\r\n});\r\n\r\nconst iosTouchableRole: readonly AccessibilityRole[] = ['button', 'header'];\r\nconst touchableRole: AccessibilityRole = Platform.select({\r\n  ios: iosTouchableRole as unknown as 'button',\r\n  default: iosTouchableRole[0],\r\n});\r\n\r\nexport default AppbarContent;\r\n\r\n// @component-docs ignore-next-line\r\nexport { AppbarContent };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}