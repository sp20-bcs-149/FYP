{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"textStyle\", \"style\", \"numeric\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableRipple from \"../TouchableRipple/TouchableRipple\";\nimport Text from \"../Typography/Text\";\nvar DataTableCell = function DataTableCell(_ref) {\n  var children = _ref.children,\n    textStyle = _ref.textStyle,\n    style = _ref.style,\n    numeric = _ref.numeric,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  return React.createElement(TouchableRipple, _extends({}, rest, {\n    style: [styles.container, numeric && styles.right, style]\n  }), React.createElement(Text, {\n    style: textStyle,\n    numberOfLines: 1\n  }, children));\n};\nDataTableCell.displayName = 'DataTable.Cell';\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  right: {\n    justifyContent: 'flex-end'\n  }\n});\nexport default DataTableCell;","map":{"version":3,"names":["React","StyleSheet","TouchableRipple","Text","DataTableCell","_ref","children","textStyle","style","numeric","rest","_objectWithoutProperties","_excluded","createElement","_extends","styles","container","right","numberOfLines","displayName","create","flex","flexDirection","alignItems","justifyContent"],"sources":["E:\\4 -ReactNative\\Final-Year-Project\\FYP3\\AwesomeProject\\node_modules\\react-native-paper\\src\\components\\DataTable\\DataTableCell.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport {\r\n  StyleSheet,\r\n  StyleProp,\r\n  ViewStyle,\r\n  TextStyle,\r\n  GestureResponderEvent,\r\n} from 'react-native';\r\n\r\nimport type { $RemoveChildren } from '../../types';\r\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\r\nimport Text from '../Typography/Text';\r\n\r\nexport type Props = $RemoveChildren<typeof TouchableRipple> & {\r\n  /**\r\n   * Content of the `DataTableCell`.\r\n   */\r\n  children: React.ReactNode;\r\n  /**\r\n   * Align the text to the right. Generally monetary or number fields are aligned to right.\r\n   */\r\n  numeric?: boolean;\r\n  /**\r\n   * Function to execute on press.\r\n   */\r\n  onPress?: (e: GestureResponderEvent) => void;\r\n  style?: StyleProp<ViewStyle>;\r\n  /**\r\n   * Text content style of the `DataTableCell`.\r\n   */\r\n  textStyle?: StyleProp<TextStyle>;\r\n};\r\n\r\n/**\r\n * A component to show a single cell inside of a table.\r\n *\r\n * <div class=\"screenshots\">\r\n *   <figure>\r\n *     <img class=\"medium\" src=\"screenshots/data-table-row-cell.png\" />\r\n *   </figure>\r\n * </div>\r\n *\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { DataTable } from 'react-native-paper';\r\n *\r\n * const MyComponent = () => (\r\n *      <DataTable.Row>\r\n *        <DataTable.Cell numeric>1</DataTable.Cell>\r\n *        <DataTable.Cell numeric>2</DataTable.Cell>\r\n *        <DataTable.Cell numeric>3</DataTable.Cell>\r\n *        <DataTable.Cell numeric>4</DataTable.Cell>\r\n *      </DataTable.Row>\r\n * );\r\n *\r\n * export default MyComponent;\r\n * ```\r\n *\r\n * If you want to support multiline text, please use View instead, as multiline text doesn't comply with\r\n * MD Guidelines (https://github.com/callstack/react-native-paper/issues/2381).\r\n *\r\n * @extends TouchableRipple props https://callstack.github.io/react-native-paper/docs/components/TouchableRipple\r\n */\r\n\r\nconst DataTableCell = ({\r\n  children,\r\n  textStyle,\r\n  style,\r\n  numeric,\r\n  ...rest\r\n}: Props) => (\r\n  <TouchableRipple\r\n    {...rest}\r\n    style={[styles.container, numeric && styles.right, style]}\r\n  >\r\n    <Text style={textStyle} numberOfLines={1}>\r\n      {children}\r\n    </Text>\r\n  </TouchableRipple>\r\n);\r\n\r\nDataTableCell.displayName = 'DataTable.Cell';\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n\r\n  right: {\r\n    justifyContent: 'flex-end',\r\n  },\r\n});\r\n\r\nexport default DataTableCell;\r\n"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAA,OAAAC,UAAA;AAU9B,OAAOC,eAAe;AACtB,OAAOC,IAAI;AAuDX,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAGC,IAAA;EAAA,IACpBC,QAAQ,GAKFD,IAAA,CALNC,QAAQ;IACRC,SAAS,GAIHF,IAAA,CAJNE,SAAS;IACTC,KAAK,GAGCH,IAAA,CAHNG,KAAK;IACLC,OAAO,GAEDJ,IAAA,CAFNI,OAAO;IACJC,IAAA,GAAAC,wBAAA,CACGN,IAAA,EAAAO,SAAA;EAAA,OACNZ,KAAA,CAAAa,aAAA,CAACX,eAAe,EAAAY,QAAA,KACVJ,IAAI;IACRF,KAAK,EAAE,CAACO,MAAM,CAACC,SAAS,EAAEP,OAAO,IAAIM,MAAM,CAACE,KAAK,EAAET,KAAK;EAAE,IAE1DR,KAAA,CAAAa,aAAA,CAACV,IAAI;IAACK,KAAK,EAAED,SAAU;IAACW,aAAa,EAAE;EAAE,GACtCZ,QAAQ,CACJ,CACS;AAAA,CACnB;AAEDF,aAAa,CAACe,WAAW,GAAG,gBAAgB;AAE5C,IAAMJ,MAAM,GAAGd,UAAU,CAACmB,MAAM,CAAC;EAC/BJ,SAAS,EAAE;IACTK,IAAI,EAAE,CAAC;IACPC,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE;EACd,CAAC;EAEDN,KAAK,EAAE;IACLO,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,eAAepB,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}