{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport React, { useEffect, useState } from \"react\";\nimport PlaceDetailItem from \"./PlaceDetailItem\";\nimport Colors from \"../Colors\";\nimport GoogleMapView from \"../GoogleMapView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { useRoute } from \"@react-navigation/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function PlaceDetail() {\n  var _route$params;\n  var route = useRoute();\n  var Place = (_route$params = route.params) == null ? void 0 : _route$params.place;\n  console.log(\" PLACE DETAILS\" + place);\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    place = _useState2[0],\n    setPlace = _useState2[1];\n  useEffect(function () {\n    setPlace(Place);\n  }, [param]);\n  var onDirectionClick = function onDirectionClick() {\n    if (place) {\n      var url = Platform.select({\n        ios: \"maps:0,0?q=\" + place.geometry.location.lat + \",\" + place.geometry.location.lng + \"(\" + place.name + \")\",\n        android: \"geo:\" + place.geometry.location.lat + \",\" + place.geometry.location.lng + \"?q=\" + place.name\n      });\n      Linking.openURL(url);\n    }\n  };\n  return _jsx(ScrollView, {\n    style: {\n      padding: 20,\n      backgroundColor: Colors.WHITE,\n      flex: 1\n    },\n    children: place && _jsxs(_Fragment, {\n      children: [_jsx(PlaceDetailItem, {\n        place: place,\n        onDirectionClick: onDirectionClick\n      }), _jsx(GoogleMapView, {\n        placeList: [place]\n      }), _jsxs(TouchableOpacity, {\n        style: {\n          backgroundColor: Colors.PRIMARY,\n          padding: 15,\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          margin: 5,\n          display: \"flex\",\n          flexDirection: \"row\",\n          gap: 10,\n          borderRadius: 50,\n          paddingBottom: 15\n        },\n        onPress: onDirectionClick,\n        children: [_jsx(Ionicons, {\n          name: \"navigate-circle-outline\",\n          size: 30,\n          color: \"white\"\n        }), _jsx(Text, {\n          style: {\n            fontFamily: \"raleway\",\n            textAlign: \"center\",\n            color: Colors.WHITE\n          },\n          children: \"Get Direction on Google Map\"\n        })]\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","useEffect","useState","PlaceDetailItem","Colors","GoogleMapView","TouchableOpacity","Platform","Linking","ScrollView","Ionicons","useRoute","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","PlaceDetail","_route$params","route","Place","params","place","console","log","_useState","_useState2","_slicedToArray","setPlace","param","onDirectionClick","url","select","ios","geometry","location","lat","lng","name","android","openURL","style","padding","backgroundColor","WHITE","flex","children","placeList","PRIMARY","alignItems","justifyContent","margin","display","flexDirection","gap","borderRadius","paddingBottom","onPress","size","color","Text","fontFamily","textAlign"],"sources":["E:/4 -ReactNative/Final-Year-Project/FYP3/AwesomeProject/components/user/findClinic/search/PlaceDetail.js"],"sourcesContent":["import { View, Text } from \"react-native\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport PlaceDetailItem from \"./PlaceDetailItem\";\r\nimport Colors from \"../Colors\";\r\nimport GoogleMapView from \"../GoogleMapView\";\r\nimport { TouchableOpacity } from \"react-native\";\r\nimport { Platform } from \"react-native\";\r\nimport { Linking } from \"react-native\";\r\nimport { ScrollView } from \"react-native\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\n\r\nimport { useRoute } from \"@react-navigation/native\";\r\n\r\n/// error in params  //\r\nexport default function PlaceDetail() {\r\n      const route = useRoute();\r\n      let Place = route.params?.place;\r\n    console.log(\" PLACE DETAILS\" + place);\r\n \r\n      const [place, setPlace] = useState(null);\r\n  useEffect(() => {\r\n    setPlace(Place);\r\n  }, [param]);\r\n\r\n  const onDirectionClick = () => {\r\n    if (place) {\r\n      const url = Platform.select({\r\n        ios: `maps:0,0?q=${place.geometry.location.lat},${place.geometry.location.lng}(${place.name})`,\r\n        android: `geo:${place.geometry.location.lat},${place.geometry.location.lng}?q=${place.name}`,\r\n      });\r\n\r\n      Linking.openURL(url);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ScrollView style={{ padding: 20, backgroundColor: Colors.WHITE, flex: 1 }}>\r\n      {place && (\r\n        <>\r\n          <PlaceDetailItem place={place} onDirectionClick={onDirectionClick} />\r\n          <GoogleMapView placeList={[place]} />\r\n          <TouchableOpacity\r\n            style={{\r\n              backgroundColor: Colors.PRIMARY,\r\n              padding: 15,\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              margin: 5,\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              gap: 10,\r\n              borderRadius: 50,\r\n              paddingBottom: 15,\r\n            }}\r\n            onPress={onDirectionClick}\r\n          >\r\n            <Ionicons name=\"navigate-circle-outline\" size={30} color=\"white\" />\r\n\r\n            <Text\r\n              style={{\r\n                fontFamily: \"raleway\",\r\n                textAlign: \"center\",\r\n                color: Colors.WHITE,\r\n              }}\r\n            >\r\n              Get Direction on Google Map\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </>\r\n      )}\r\n    </ScrollView>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}