{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport { useInternalTheme } from \"../../core/theming\";\nimport Card from \"../Card/Card\";\nimport Text from \"../Typography/Text\";\nimport FAB from \"./FAB\";\nimport { getFABGroupColors } from \"./utils\";\nvar FABGroup = function FABGroup(_ref) {\n  var actions = _ref.actions,\n    icon = _ref.icon,\n    open = _ref.open,\n    _onPress = _ref.onPress,\n    _onLongPress = _ref.onLongPress,\n    toggleStackOnLongPress = _ref.toggleStackOnLongPress,\n    accessibilityLabel = _ref.accessibilityLabel,\n    themeOverrides = _ref.theme,\n    style = _ref.style,\n    fabStyle = _ref.fabStyle,\n    visible = _ref.visible,\n    label = _ref.label,\n    testID = _ref.testID,\n    onStateChange = _ref.onStateChange,\n    colorProp = _ref.color,\n    _ref$delayLongPress = _ref.delayLongPress,\n    delayLongPress = _ref$delayLongPress === void 0 ? 200 : _ref$delayLongPress,\n    _ref$variant = _ref.variant,\n    variant = _ref$variant === void 0 ? 'primary' : _ref$variant,\n    _ref$enableLongPressW = _ref.enableLongPressWhenStackOpened,\n    enableLongPressWhenStackOpened = _ref$enableLongPressW === void 0 ? false : _ref$enableLongPressW,\n    customBackdropColor = _ref.backdropColor;\n  var theme = useInternalTheme(themeOverrides);\n  var _React$useRef = React.useRef(new Animated.Value(0)),\n    backdrop = _React$useRef.current;\n  var animations = React.useRef(actions.map(function () {\n    return new Animated.Value(open ? 1 : 0);\n  }));\n  var _React$useState = React.useState(null),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    prevActions = _React$useState2[0],\n    setPrevActions = _React$useState2[1];\n  var scale = theme.animation.scale;\n  var isV3 = theme.isV3;\n  React.useEffect(function () {\n    if (open) {\n      Animated.parallel([Animated.timing(backdrop, {\n        toValue: 1,\n        duration: 250 * scale,\n        useNativeDriver: true\n      }), Animated.stagger(isV3 ? 15 : 50 * scale, animations.current.map(function (animation) {\n        return Animated.timing(animation, {\n          toValue: 1,\n          duration: 150 * scale,\n          useNativeDriver: true\n        });\n      }).reverse())]).start();\n    } else {\n      Animated.parallel([Animated.timing(backdrop, {\n        toValue: 0,\n        duration: 200 * scale,\n        useNativeDriver: true\n      })].concat(_toConsumableArray(animations.current.map(function (animation) {\n        return Animated.timing(animation, {\n          toValue: 0,\n          duration: 150 * scale,\n          useNativeDriver: true\n        });\n      })))).start();\n    }\n  }, [open, actions, backdrop, scale, isV3]);\n  var close = function close() {\n    return onStateChange({\n      open: false\n    });\n  };\n  var toggle = function toggle() {\n    return onStateChange({\n      open: !open\n    });\n  };\n  var _getFABGroupColors = getFABGroupColors({\n      theme: theme,\n      customBackdropColor: customBackdropColor\n    }),\n    labelColor = _getFABGroupColors.labelColor,\n    backdropColor = _getFABGroupColors.backdropColor,\n    stackedFABBackgroundColor = _getFABGroupColors.stackedFABBackgroundColor;\n  var backdropOpacity = open ? backdrop.interpolate({\n    inputRange: [0, 0.5, 1],\n    outputRange: [0, 1, 1]\n  }) : backdrop;\n  var opacities = animations.current;\n  var scales = opacities.map(function (opacity) {\n    return open ? opacity.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0.5, 1]\n    }) : 1;\n  });\n  var translations = opacities.map(function (opacity) {\n    return open ? opacity.interpolate({\n      inputRange: [0, 1],\n      outputRange: [24, -8]\n    }) : -8;\n  });\n  var labelTranslations = opacities.map(function (opacity) {\n    return open ? opacity.interpolate({\n      inputRange: [0, 1],\n      outputRange: [8, -8]\n    }) : -8;\n  });\n  var _useSafeAreaInsets = useSafeAreaInsets(),\n    top = _useSafeAreaInsets.top,\n    bottom = _useSafeAreaInsets.bottom,\n    right = _useSafeAreaInsets.right,\n    left = _useSafeAreaInsets.left;\n  var containerPaddings = {\n    paddingBottom: bottom,\n    paddingRight: right,\n    paddingLeft: left,\n    paddingTop: top\n  };\n  if (actions.length !== (prevActions === null || prevActions === void 0 ? void 0 : prevActions.length)) {\n    animations.current = actions.map(function (_, i) {\n      return animations.current[i] || new Animated.Value(open ? 1 : 0);\n    });\n    setPrevActions(actions);\n  }\n  return React.createElement(View, {\n    pointerEvents: \"box-none\",\n    style: [styles.container, containerPaddings, style]\n  }, React.createElement(TouchableWithoutFeedback, {\n    accessibilityRole: \"button\",\n    onPress: close\n  }, React.createElement(Animated.View, {\n    pointerEvents: open ? 'auto' : 'none',\n    style: [styles.backdrop, {\n      opacity: backdropOpacity,\n      backgroundColor: backdropColor\n    }]\n  })), React.createElement(View, {\n    pointerEvents: \"box-none\",\n    style: styles.safeArea\n  }, React.createElement(View, {\n    pointerEvents: open ? 'box-none' : 'none'\n  }, actions.map(function (it, i) {\n    var _it$labelTextColor;\n    var labelTextStyle = _objectSpread({\n      color: (_it$labelTextColor = it.labelTextColor) != null ? _it$labelTextColor : labelColor\n    }, isV3 ? theme.fonts.titleMedium : {});\n    var marginHorizontal = typeof it.size === 'undefined' || it.size === 'small' ? 24 : 16;\n    var accessibilityLabel = typeof it.accessibilityLabel !== 'undefined' ? it.accessibilityLabel : it.label;\n    var size = typeof it.size !== 'undefined' ? it.size : 'small';\n    return React.createElement(View, {\n      key: i,\n      style: [styles.item, {\n        marginHorizontal: marginHorizontal\n      }],\n      pointerEvents: open ? 'box-none' : 'none'\n    }, it.label && React.createElement(View, null, React.createElement(Card, {\n      mode: isV3 ? 'contained' : 'elevated',\n      onPress: function onPress(e) {\n        it.onPress(e);\n        close();\n      },\n      accessibilityHint: it.accessibilityHint,\n      accessibilityLabel: accessibilityLabel,\n      accessibilityRole: \"button\",\n      style: [styles.containerStyle, {\n        transform: [isV3 ? {\n          translateY: labelTranslations[i]\n        } : {\n          scale: scales[i]\n        }],\n        opacity: opacities[i]\n      }, isV3 && styles.v3ContainerStyle, it.containerStyle]\n    }, React.createElement(Text, {\n      variant: \"titleMedium\",\n      style: [labelTextStyle, it.labelStyle]\n    }, it.label))), React.createElement(FAB, {\n      size: size,\n      icon: it.icon,\n      color: it.color,\n      style: [{\n        transform: [{\n          scale: scales[i]\n        }],\n        opacity: opacities[i],\n        backgroundColor: stackedFABBackgroundColor\n      }, isV3 && {\n        transform: [{\n          translateY: translations[i]\n        }]\n      }, it.style],\n      onPress: function onPress(e) {\n        it.onPress(e);\n        close();\n      },\n      accessibilityLabel: accessibilityLabel,\n      accessibilityRole: \"button\",\n      testID: it.testID,\n      visible: open\n    }));\n  })), React.createElement(FAB, {\n    onPress: function onPress(e) {\n      _onPress === null || _onPress === void 0 ? void 0 : _onPress(e);\n      if (!toggleStackOnLongPress || open) {\n        toggle();\n      }\n    },\n    onLongPress: function onLongPress(e) {\n      if (!open || enableLongPressWhenStackOpened) {\n        _onLongPress === null || _onLongPress === void 0 ? void 0 : _onLongPress(e);\n        if (toggleStackOnLongPress) {\n          toggle();\n        }\n      }\n    },\n    delayLongPress: delayLongPress,\n    icon: icon,\n    color: colorProp,\n    accessibilityLabel: accessibilityLabel,\n    accessibilityRole: \"button\",\n    accessibilityState: {\n      expanded: open\n    },\n    style: [styles.fab, fabStyle],\n    visible: visible,\n    label: label,\n    testID: testID,\n    variant: variant\n  })));\n};\nFABGroup.displayName = 'FAB.Group';\nexport default FABGroup;\nexport { FABGroup };\nvar styles = StyleSheet.create({\n  safeArea: {\n    alignItems: 'flex-end'\n  },\n  container: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    justifyContent: 'flex-end'\n  }),\n  fab: {\n    marginHorizontal: 16,\n    marginBottom: 16,\n    marginTop: 0\n  },\n  backdrop: _objectSpread({}, StyleSheet.absoluteFillObject),\n  containerStyle: {\n    borderRadius: 5,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    marginVertical: 8,\n    marginHorizontal: 16,\n    elevation: 2\n  },\n  item: {\n    marginBottom: 16,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center'\n  },\n  v3ContainerStyle: {\n    backgroundColor: 'transparent',\n    elevation: 0\n  }\n});","map":{"version":3,"names":["React","Animated","StyleSheet","TouchableWithoutFeedback","View","useSafeAreaInsets","useInternalTheme","Card","Text","FAB","getFABGroupColors","FABGroup","_ref","actions","icon","open","onPress","onLongPress","toggleStackOnLongPress","accessibilityLabel","themeOverrides","theme","style","fabStyle","visible","label","testID","onStateChange","colorProp","color","_ref$delayLongPress","delayLongPress","_ref$variant","variant","_ref$enableLongPressW","enableLongPressWhenStackOpened","customBackdropColor","backdropColor","_React$useRef","useRef","Value","backdrop","current","animations","map","_React$useState","useState","_React$useState2","_slicedToArray","prevActions","setPrevActions","scale","animation","isV3","useEffect","parallel","timing","toValue","duration","useNativeDriver","stagger","reverse","start","concat","_toConsumableArray","close","toggle","_getFABGroupColors","labelColor","stackedFABBackgroundColor","backdropOpacity","interpolate","inputRange","outputRange","opacities","scales","opacity","translations","labelTranslations","_useSafeAreaInsets","top","bottom","right","left","containerPaddings","paddingBottom","paddingRight","paddingLeft","paddingTop","length","_","i","createElement","pointerEvents","styles","container","accessibilityRole","backgroundColor","safeArea","it","_it$labelTextColor","labelTextStyle","_objectSpread","labelTextColor","fonts","titleMedium","marginHorizontal","size","key","item","mode","e","accessibilityHint","containerStyle","transform","translateY","v3ContainerStyle","labelStyle","accessibilityState","expanded","fab","displayName","create","alignItems","absoluteFillObject","justifyContent","marginBottom","marginTop","borderRadius","paddingHorizontal","paddingVertical","marginVertical","elevation","flexDirection"],"sources":["E:\\4 -ReactNative\\Final-Year-Project\\FYP3\\AwesomeProject\\node_modules\\react-native-paper\\src\\components\\FAB\\FABGroup.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport {\r\n  Animated,\r\n  GestureResponderEvent,\r\n  StyleProp,\r\n  StyleSheet,\r\n  TextStyle,\r\n  TouchableWithoutFeedback,\r\n  View,\r\n  ViewStyle,\r\n} from 'react-native';\r\n\r\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\r\n\r\nimport { useInternalTheme } from '../../core/theming';\r\nimport type { ThemeProp } from '../../types';\r\nimport Card from '../Card/Card';\r\nimport type { IconSource } from '../Icon';\r\nimport Text from '../Typography/Text';\r\nimport FAB from './FAB';\r\nimport { getFABGroupColors } from './utils';\r\n\r\nexport type Props = {\r\n  /**\r\n   * Action items to display in the form of a speed dial.\r\n   * An action item should contain the following properties:\r\n   * - `icon`: icon to display (required)\r\n   * - `label`: optional label text\r\n   * - `color`: custom icon color of the action item\r\n   * - `labelTextColor`: custom label text color of the action item\r\n   * - `accessibilityLabel`: accessibility label for the action, uses label by default if specified\r\n   * - `accessibilityHint`: accessibility hint for the action\r\n   * - `style`: pass additional styles for the fab item, for example, `backgroundColor`\r\n   * - `containerStyle`: pass additional styles for the fab item label container, for example, `backgroundColor` @supported Available in 5.x\r\n   * - `labelStyle`: pass additional styles for the fab item label, for example, `fontSize`\r\n   * - `onPress`: callback that is called when `FAB` is pressed (required)\r\n   * - `onLongPress`: callback that is called when `FAB` is long pressed\r\n   * - `toggleStackOnLongPress`: callback that is called when `FAB` is long pressed\r\n   * - `size`: size of action item. Defaults to `small`. @supported Available in v5.x\r\n   * - `testID`: testID to be used on tests\r\n   */\r\n  actions: Array<{\r\n    icon: IconSource;\r\n    label?: string;\r\n    color?: string;\r\n    labelTextColor?: string;\r\n    accessibilityLabel?: string;\r\n    accessibilityHint?: string;\r\n    style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\r\n    containerStyle?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\r\n    labelStyle?: StyleProp<TextStyle>;\r\n    onPress: (e: GestureResponderEvent) => void;\r\n    size?: 'small' | 'medium';\r\n    testID?: string;\r\n  }>;\r\n  /**\r\n   * Icon to display for the `FAB`.\r\n   * You can toggle it based on whether the speed dial is open to display a different icon.\r\n   */\r\n  icon: IconSource;\r\n  /**\r\n   * Accessibility label for the FAB. This is read by the screen reader when the user taps the FAB.\r\n   */\r\n  accessibilityLabel?: string;\r\n  /**\r\n   * Custom color for the `FAB`.\r\n   */\r\n  color?: string;\r\n  /**\r\n   * Custom backdrop color for opened speed dial background.\r\n   */\r\n  backdropColor?: string;\r\n  /**\r\n   * Function to execute on pressing the `FAB`.\r\n   */\r\n  onPress?: (e: GestureResponderEvent) => void;\r\n  /**\r\n   * Function to execute on long pressing the `FAB`.\r\n   */\r\n  onLongPress?: (e: GestureResponderEvent) => void;\r\n  /**\r\n   * Makes actions stack appear on long press instead of on press.\r\n   */\r\n  toggleStackOnLongPress?: boolean;\r\n  /**\r\n   * Changes the delay for long press reaction.\r\n   */\r\n  delayLongPress?: number;\r\n  /**\r\n   * Allows for onLongPress when stack is opened.\r\n   */\r\n  enableLongPressWhenStackOpened?: boolean;\r\n  /**\r\n   * Whether the speed dial is open.\r\n   */\r\n  open: boolean;\r\n  /**\r\n   * Callback which is called on opening and closing the speed dial.\r\n   * The open state needs to be updated when it's called, otherwise the change is dropped.\r\n   */\r\n  onStateChange: (state: { open: boolean }) => void;\r\n  /**\r\n   * Whether `FAB` is currently visible.\r\n   */\r\n  visible: boolean;\r\n  /**\r\n   * Style for the group. You can use it to pass additional styles if you need.\r\n   * For example, you can set an additional padding if you have a tab bar at the bottom.\r\n   */\r\n  style?: StyleProp<ViewStyle>;\r\n  /**\r\n   * Style for the FAB. It allows to pass the FAB button styles, such as backgroundColor.\r\n   */\r\n  fabStyle?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\r\n  /**\r\n   * @supported Available in v5.x with theme version 3\r\n   *\r\n   * Color mappings variant for combinations of container and icon colors.\r\n   */\r\n  variant?: 'primary' | 'secondary' | 'tertiary' | 'surface';\r\n  /**\r\n   * @optional\r\n   */\r\n  theme?: ThemeProp;\r\n  /**\r\n   * Optional label for `FAB`.\r\n   */\r\n  label?: string;\r\n  /**\r\n   * Pass down testID from Group props to FAB.\r\n   */\r\n  testID?: string;\r\n};\r\n\r\n/**\r\n * A component to display a stack of FABs with related actions in a speed dial.\r\n * To render the group above other components, you'll need to wrap it with the [`Portal`](../Portal) component.\r\n *\r\n * <div class=\"screenshots\">\r\n *   <img class=\"small\" src=\"screenshots/fab-group.gif\" />\r\n * </div>\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { FAB, Portal, PaperProvider } from 'react-native-paper';\r\n *\r\n * const MyComponent = () => {\r\n *   const [state, setState] = React.useState({ open: false });\r\n *\r\n *   const onStateChange = ({ open }) => setState({ open });\r\n *\r\n *   const { open } = state;\r\n *\r\n *   return (\r\n *     <PaperProvider>\r\n *       <Portal>\r\n *         <FAB.Group\r\n *           open={open}\r\n *           visible\r\n *           icon={open ? 'calendar-today' : 'plus'}\r\n *           actions={[\r\n *             { icon: 'plus', onPress: () => console.log('Pressed add') },\r\n *             {\r\n *               icon: 'star',\r\n *               label: 'Star',\r\n *               onPress: () => console.log('Pressed star'),\r\n *             },\r\n *             {\r\n *               icon: 'email',\r\n *               label: 'Email',\r\n *               onPress: () => console.log('Pressed email'),\r\n *             },\r\n *             {\r\n *               icon: 'bell',\r\n *               label: 'Remind',\r\n *               onPress: () => console.log('Pressed notifications'),\r\n *             },\r\n *           ]}\r\n *           onStateChange={onStateChange}\r\n *           onPress={() => {\r\n *             if (open) {\r\n *               // do something if the speed dial is open\r\n *             }\r\n *           }}\r\n *         />\r\n *       </Portal>\r\n *     </PaperProvider>\r\n *   );\r\n * };\r\n *\r\n * export default MyComponent;\r\n * ```\r\n */\r\nconst FABGroup = ({\r\n  actions,\r\n  icon,\r\n  open,\r\n  onPress,\r\n  onLongPress,\r\n  toggleStackOnLongPress,\r\n  accessibilityLabel,\r\n  theme: themeOverrides,\r\n  style,\r\n  fabStyle,\r\n  visible,\r\n  label,\r\n  testID,\r\n  onStateChange,\r\n  color: colorProp,\r\n  delayLongPress = 200,\r\n  variant = 'primary',\r\n  enableLongPressWhenStackOpened = false,\r\n  backdropColor: customBackdropColor,\r\n}: Props) => {\r\n  const theme = useInternalTheme(themeOverrides);\r\n  const { current: backdrop } = React.useRef<Animated.Value>(\r\n    new Animated.Value(0)\r\n  );\r\n  const animations = React.useRef<Animated.Value[]>(\r\n    actions.map(() => new Animated.Value(open ? 1 : 0))\r\n  );\r\n\r\n  const [prevActions, setPrevActions] = React.useState<\r\n    | {\r\n        icon: IconSource;\r\n        label?: string;\r\n        color?: string;\r\n        accessibilityLabel?: string;\r\n        style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\r\n        onPress: (e: GestureResponderEvent) => void;\r\n        testID?: string;\r\n      }[]\r\n    | null\r\n  >(null);\r\n\r\n  const { scale } = theme.animation;\r\n  const { isV3 } = theme;\r\n\r\n  React.useEffect(() => {\r\n    if (open) {\r\n      Animated.parallel([\r\n        Animated.timing(backdrop, {\r\n          toValue: 1,\r\n          duration: 250 * scale,\r\n          useNativeDriver: true,\r\n        }),\r\n        Animated.stagger(\r\n          isV3 ? 15 : 50 * scale,\r\n          animations.current\r\n            .map((animation) =>\r\n              Animated.timing(animation, {\r\n                toValue: 1,\r\n                duration: 150 * scale,\r\n                useNativeDriver: true,\r\n              })\r\n            )\r\n            .reverse()\r\n        ),\r\n      ]).start();\r\n    } else {\r\n      Animated.parallel([\r\n        Animated.timing(backdrop, {\r\n          toValue: 0,\r\n          duration: 200 * scale,\r\n          useNativeDriver: true,\r\n        }),\r\n        ...animations.current.map((animation) =>\r\n          Animated.timing(animation, {\r\n            toValue: 0,\r\n            duration: 150 * scale,\r\n            useNativeDriver: true,\r\n          })\r\n        ),\r\n      ]).start();\r\n    }\r\n  }, [open, actions, backdrop, scale, isV3]);\r\n\r\n  const close = () => onStateChange({ open: false });\r\n\r\n  const toggle = () => onStateChange({ open: !open });\r\n\r\n  const { labelColor, backdropColor, stackedFABBackgroundColor } =\r\n    getFABGroupColors({ theme, customBackdropColor });\r\n\r\n  const backdropOpacity = open\r\n    ? backdrop.interpolate({\r\n        inputRange: [0, 0.5, 1],\r\n        outputRange: [0, 1, 1],\r\n      })\r\n    : backdrop;\r\n\r\n  const opacities = animations.current;\r\n  const scales = opacities.map((opacity) =>\r\n    open\r\n      ? opacity.interpolate({\r\n          inputRange: [0, 1],\r\n          outputRange: [0.5, 1],\r\n        })\r\n      : 1\r\n  );\r\n\r\n  const translations = opacities.map((opacity) =>\r\n    open\r\n      ? opacity.interpolate({\r\n          inputRange: [0, 1],\r\n          outputRange: [24, -8],\r\n        })\r\n      : -8\r\n  );\r\n  const labelTranslations = opacities.map((opacity) =>\r\n    open\r\n      ? opacity.interpolate({\r\n          inputRange: [0, 1],\r\n          outputRange: [8, -8],\r\n        })\r\n      : -8\r\n  );\r\n\r\n  const { top, bottom, right, left } = useSafeAreaInsets();\r\n  const containerPaddings = {\r\n    paddingBottom: bottom,\r\n    paddingRight: right,\r\n    paddingLeft: left,\r\n    paddingTop: top,\r\n  };\r\n\r\n  if (actions.length !== prevActions?.length) {\r\n    animations.current = actions.map(\r\n      (_, i) => animations.current[i] || new Animated.Value(open ? 1 : 0)\r\n    );\r\n    setPrevActions(actions);\r\n  }\r\n\r\n  return (\r\n    <View\r\n      pointerEvents=\"box-none\"\r\n      style={[styles.container, containerPaddings, style]}\r\n    >\r\n      <TouchableWithoutFeedback accessibilityRole=\"button\" onPress={close}>\r\n        <Animated.View\r\n          pointerEvents={open ? 'auto' : 'none'}\r\n          style={[\r\n            styles.backdrop,\r\n            {\r\n              opacity: backdropOpacity,\r\n              backgroundColor: backdropColor,\r\n            },\r\n          ]}\r\n        />\r\n      </TouchableWithoutFeedback>\r\n      <View pointerEvents=\"box-none\" style={styles.safeArea}>\r\n        <View pointerEvents={open ? 'box-none' : 'none'}>\r\n          {actions.map((it, i) => {\r\n            const labelTextStyle = {\r\n              color: it.labelTextColor ?? labelColor,\r\n              ...(isV3 ? theme.fonts.titleMedium : {}),\r\n            };\r\n            const marginHorizontal =\r\n              typeof it.size === 'undefined' || it.size === 'small' ? 24 : 16;\r\n            const accessibilityLabel =\r\n              typeof it.accessibilityLabel !== 'undefined'\r\n                ? it.accessibilityLabel\r\n                : it.label;\r\n            const size = typeof it.size !== 'undefined' ? it.size : 'small';\r\n\r\n            return (\r\n              <View\r\n                key={i} // eslint-disable-line react/no-array-index-key\r\n                style={[\r\n                  styles.item,\r\n                  {\r\n                    marginHorizontal,\r\n                  },\r\n                ]}\r\n                pointerEvents={open ? 'box-none' : 'none'}\r\n              >\r\n                {it.label && (\r\n                  <View>\r\n                    <Card\r\n                      mode={isV3 ? 'contained' : 'elevated'}\r\n                      onPress={(e) => {\r\n                        it.onPress(e);\r\n                        close();\r\n                      }}\r\n                      accessibilityHint={it.accessibilityHint}\r\n                      accessibilityLabel={accessibilityLabel}\r\n                      accessibilityRole=\"button\"\r\n                      style={[\r\n                        styles.containerStyle,\r\n                        {\r\n                          transform: [\r\n                            isV3\r\n                              ? { translateY: labelTranslations[i] }\r\n                              : { scale: scales[i] },\r\n                          ],\r\n                          opacity: opacities[i],\r\n                        },\r\n                        isV3 && styles.v3ContainerStyle,\r\n                        it.containerStyle,\r\n                      ]}\r\n                    >\r\n                      <Text\r\n                        variant=\"titleMedium\"\r\n                        style={[labelTextStyle, it.labelStyle]}\r\n                      >\r\n                        {it.label}\r\n                      </Text>\r\n                    </Card>\r\n                  </View>\r\n                )}\r\n                <FAB\r\n                  size={size}\r\n                  icon={it.icon}\r\n                  color={it.color}\r\n                  style={[\r\n                    {\r\n                      transform: [{ scale: scales[i] }],\r\n                      opacity: opacities[i],\r\n                      backgroundColor: stackedFABBackgroundColor,\r\n                    },\r\n                    isV3 && { transform: [{ translateY: translations[i] }] },\r\n                    it.style,\r\n                  ]}\r\n                  onPress={(e) => {\r\n                    it.onPress(e);\r\n                    close();\r\n                  }}\r\n                  accessibilityLabel={accessibilityLabel}\r\n                  accessibilityRole=\"button\"\r\n                  testID={it.testID}\r\n                  visible={open}\r\n                />\r\n              </View>\r\n            );\r\n          })}\r\n        </View>\r\n        <FAB\r\n          onPress={(e) => {\r\n            onPress?.(e);\r\n            if (!toggleStackOnLongPress || open) {\r\n              toggle();\r\n            }\r\n          }}\r\n          onLongPress={(e) => {\r\n            if (!open || enableLongPressWhenStackOpened) {\r\n              onLongPress?.(e);\r\n              if (toggleStackOnLongPress) {\r\n                toggle();\r\n              }\r\n            }\r\n          }}\r\n          delayLongPress={delayLongPress}\r\n          icon={icon}\r\n          color={colorProp}\r\n          accessibilityLabel={accessibilityLabel}\r\n          accessibilityRole=\"button\"\r\n          accessibilityState={{ expanded: open }}\r\n          style={[styles.fab, fabStyle]}\r\n          visible={visible}\r\n          label={label}\r\n          testID={testID}\r\n          variant={variant}\r\n        />\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nFABGroup.displayName = 'FAB.Group';\r\n\r\nexport default FABGroup;\r\n\r\n// @component-docs ignore-next-line\r\nexport { FABGroup };\r\n\r\nconst styles = StyleSheet.create({\r\n  safeArea: {\r\n    alignItems: 'flex-end',\r\n  },\r\n  container: {\r\n    ...StyleSheet.absoluteFillObject,\r\n    justifyContent: 'flex-end',\r\n  },\r\n  fab: {\r\n    marginHorizontal: 16,\r\n    marginBottom: 16,\r\n    marginTop: 0,\r\n  },\r\n  backdrop: {\r\n    ...StyleSheet.absoluteFillObject,\r\n  },\r\n  containerStyle: {\r\n    borderRadius: 5,\r\n    paddingHorizontal: 12,\r\n    paddingVertical: 6,\r\n    marginVertical: 8,\r\n    marginHorizontal: 16,\r\n    elevation: 2,\r\n  },\r\n  item: {\r\n    marginBottom: 16,\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-end',\r\n    alignItems: 'center',\r\n  },\r\n  // eslint-disable-next-line react-native/no-color-literals\r\n  v3ContainerStyle: {\r\n    backgroundColor: 'transparent',\r\n    elevation: 0,\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}