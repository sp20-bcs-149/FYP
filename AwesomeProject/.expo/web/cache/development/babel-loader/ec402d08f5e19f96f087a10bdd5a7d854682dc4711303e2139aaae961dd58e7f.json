{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React from 'react';\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ReanimatedEventEmitter from \"./ReanimatedEventEmitter\";\nimport AnimatedEvent from \"./reanimated1/core/AnimatedEvent\";\nimport AnimatedNode from \"./reanimated1/core/AnimatedNode\";\nimport AnimatedValue from \"./reanimated1/core/AnimatedValue\";\nimport { createOrReusePropsNode } from \"./reanimated1/core/AnimatedProps\";\nimport WorkletEventHandler from \"./reanimated2/WorkletEventHandler\";\nimport setAndForwardRef from \"./setAndForwardRef\";\nimport \"./reanimated2/layoutReanimation/LayoutAnimationRepository\";\nimport invariant from 'invariant';\nimport { adaptViewConfig } from \"./ConfigHelper\";\nimport { RNRenderer } from \"./reanimated2/platform-specific/RNRenderer\";\nimport { makeMutable, runOnUI, enableLayoutAnimations } from \"./reanimated2/core\";\nimport { DefaultEntering, DefaultExiting, DefaultLayout } from \"./reanimated2/layoutReanimation/defaultAnimations/Default\";\nimport { isJest, isChromeDebugger, shouldBeUseWeb } from \"./reanimated2/PlatformChecker\";\nimport { initialUpdaterRun } from \"./reanimated2/animation\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar NODE_MAPPING = new Map();\nfunction listener(data) {\n  var component = NODE_MAPPING.get(data.viewTag);\n  component && component._updateFromNative(data.props);\n}\nfunction dummyListener() {}\nfunction hasAnimatedNodes(value) {\n  if (value instanceof AnimatedNode) {\n    return true;\n  }\n  if (Array.isArray(value)) {\n    return value.some(function (item) {\n      return hasAnimatedNodes(item);\n    });\n  }\n  if (value && typeof value === 'object') {\n    return Object.keys(value).some(function (key) {\n      return hasAnimatedNodes(value[key]);\n    });\n  }\n  return false;\n}\nfunction flattenArray(array) {\n  if (!Array.isArray(array)) {\n    return [array];\n  }\n  var resultArr = [];\n  var _flattenArray = function _flattenArray(arr) {\n    arr.forEach(function (item) {\n      if (Array.isArray(item)) {\n        _flattenArray(item);\n      } else {\n        resultArr.push(item);\n      }\n    });\n  };\n  _flattenArray(array);\n  return resultArr;\n}\nfunction onlyAnimatedStyles(styles) {\n  return styles.filter(function (style) {\n    return style === null || style === void 0 ? void 0 : style.viewDescriptors;\n  });\n}\nfunction isSameAnimatedStyle(style1, style2) {\n  return (style1 === null || style1 === void 0 ? void 0 : style1.viewsRef) === (style2 === null || style2 === void 0 ? void 0 : style2.viewsRef);\n}\nvar isSameAnimatedProps = isSameAnimatedStyle;\nvar has = function has(key, x) {\n  if (typeof x === 'function' || typeof x === 'object') {\n    if (x === null || x === undefined) {\n      return false;\n    } else {\n      return key in x;\n    }\n  }\n  return false;\n};\nexport default function createAnimatedComponent(Component, options) {\n  invariant(typeof Component !== 'function' || Component.prototype && Component.prototype.isReactComponent, '`createAnimatedComponent` does not support stateless functional components; ' + 'use a class component instead.');\n  var AnimatedComponent = function (_React$Component) {\n    _inherits(AnimatedComponent, _React$Component);\n    var _super = _createSuper(AnimatedComponent);\n    function AnimatedComponent(props) {\n      var _this;\n      _classCallCheck(this, AnimatedComponent);\n      _this = _super.call(this, props);\n      _this._invokeAnimatedPropsCallbackOnMount = false;\n      _this._styles = null;\n      _this._viewTag = -1;\n      _this._isFirstRender = true;\n      _this.animatedStyle = {\n        value: {}\n      };\n      _this.initialStyle = {};\n      _this._component = null;\n      _this._animatedPropsCallback = function () {\n        if (_this._component == null) {\n          _this._invokeAnimatedPropsCallbackOnMount = true;\n        } else if (typeof _this._component.setNativeProps !== 'function') {\n          _this.forceUpdate();\n        } else {\n          _this._component.setNativeProps(_this._propsAnimated.__getValue());\n        }\n      };\n      _this._setComponentRef = setAndForwardRef({\n        getForwardedRef: function getForwardedRef() {\n          return _this.props.forwardedRef;\n        },\n        setLocalRef: function setLocalRef(ref) {\n          var tag = findNodeHandle(ref);\n          if (!shouldBeUseWeb() && (_this.props.layout || _this.props.entering || _this.props.exiting) && tag != null) {\n            enableLayoutAnimations(true, false);\n            var layout = _this.props.layout ? _this.props.layout : DefaultLayout;\n            var entering = _this.props.entering ? _this.props.entering : DefaultEntering;\n            var exiting = _this.props.exiting ? _this.props.exiting : DefaultExiting;\n            if (has('build', layout)) {\n              layout = layout.build();\n            }\n            if (has('build', entering)) {\n              entering = entering.build();\n            }\n            if (has('build', exiting)) {\n              exiting = exiting.build();\n            }\n            var config = {\n              layout: layout,\n              entering: entering,\n              exiting: exiting,\n              sv: _this.sv\n            };\n            runOnUI(function () {\n              var _f = function _f() {\n                global.LayoutAnimationRepository.registerConfig(tag, config);\n              };\n              _f._closure = {\n                tag: tag,\n                config: config\n              };\n              _f.asString = \"function _f(){const{tag,config}=jsThis._closure;{global.LayoutAnimationRepository.registerConfig(tag,config);}}\";\n              _f.__workletHash = 5455589887771;\n              _f.__location = \"E:\\\\4 -ReactNative\\\\Final-Year-Project\\\\FYP3\\\\AwesomeProject\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\createAnimatedComponent.js (148:32)\";\n              return _f;\n            }())();\n          }\n          if (ref !== _this._component) {\n            _this._component = ref;\n          }\n        }\n      });\n      _this._attachProps(_this.props);\n      if (isJest()) {\n        _this.animatedStyle = {\n          value: {}\n        };\n      }\n      _this.sv = makeMutable({});\n      return _this;\n    }\n    _createClass(AnimatedComponent, [{\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        this._detachPropUpdater();\n        this._propsAnimated && this._propsAnimated.__detach();\n        this._detachNativeEvents();\n        this._detachStyles();\n        this.sv = null;\n      }\n    }, {\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        if (this._invokeAnimatedPropsCallbackOnMount) {\n          this._invokeAnimatedPropsCallbackOnMount = false;\n          this._animatedPropsCallback();\n        }\n        this._propsAnimated && this._propsAnimated.setNativeView(this._component);\n        this._attachNativeEvents();\n        this._attachPropUpdater();\n        this._attachAnimatedStyles();\n      }\n    }, {\n      key: \"_getEventViewRef\",\n      value: function _getEventViewRef() {\n        var _a;\n        return ((_a = this._component) === null || _a === void 0 ? void 0 : _a.getScrollableNode) ? this._component.getScrollableNode() : this._component;\n      }\n    }, {\n      key: \"_attachNativeEvents\",\n      value: function _attachNativeEvents() {\n        var node = this._getEventViewRef();\n        var viewTag = findNodeHandle((options === null || options === void 0 ? void 0 : options.setNativeProps) ? this : node);\n        var componentName = Component.displayName || Component.name;\n        if ((componentName === null || componentName === void 0 ? void 0 : componentName.endsWith('FlashList')) && this._component) {\n          viewTag = findNodeHandle(this._component.getScrollableNode());\n        }\n        for (var key in this.props) {\n          var prop = this.props[key];\n          if (prop instanceof AnimatedEvent) {\n            prop.attachEvent(node, key);\n          } else if (has('current', prop) && prop.current instanceof WorkletEventHandler) {\n            prop.current.registerForEvents(viewTag, key);\n          }\n        }\n      }\n    }, {\n      key: \"_detachNativeEvents\",\n      value: function _detachNativeEvents() {\n        var node = this._getEventViewRef();\n        for (var key in this.props) {\n          var prop = this.props[key];\n          if (prop instanceof AnimatedEvent) {\n            prop.detachEvent(node, key);\n          } else if (has('current', prop) && prop.current instanceof WorkletEventHandler) {\n            prop.current.unregisterFromEvents();\n          }\n        }\n      }\n    }, {\n      key: \"_detachStyles\",\n      value: function _detachStyles() {\n        var _a;\n        if (Platform.OS === 'web' && this._styles !== null) {\n          for (var style of this._styles) {\n            if (style === null || style === void 0 ? void 0 : style.viewsRef) {\n              style.viewsRef.remove(this);\n            }\n          }\n        } else if (this._viewTag !== -1 && this._styles !== null) {\n          for (var _style of this._styles) {\n            _style.viewDescriptors.remove(this._viewTag);\n          }\n          if ((_a = this.props.animatedProps) === null || _a === void 0 ? void 0 : _a.viewDescriptors) {\n            this.props.animatedProps.viewDescriptors.remove(this._viewTag);\n          }\n        }\n      }\n    }, {\n      key: \"_reattachNativeEvents\",\n      value: function _reattachNativeEvents(prevProps) {\n        var node = this._getEventViewRef();\n        var attached = new Set();\n        var nextEvts = new Set();\n        var viewTag;\n        for (var key in this.props) {\n          var prop = this.props[key];\n          if (prop instanceof AnimatedEvent) {\n            nextEvts.add(prop.__nodeID);\n          } else if (has('current', prop) && prop.current instanceof WorkletEventHandler) {\n            if (viewTag === undefined) {\n              viewTag = prop.current.viewTag;\n            }\n          }\n        }\n        for (var _key in prevProps) {\n          var _prop = this.props[_key];\n          if (_prop instanceof AnimatedEvent) {\n            if (!nextEvts.has(_prop.__nodeID)) {\n              _prop.detachEvent(node, _key);\n            } else {\n              attached.add(_prop.__nodeID);\n            }\n          } else if (has('current', _prop) && _prop.current instanceof WorkletEventHandler && _prop.current.reattachNeeded) {\n            _prop.current.unregisterFromEvents();\n          }\n        }\n        for (var _key2 in this.props) {\n          var _prop2 = this.props[_key2];\n          if (_prop2 instanceof AnimatedEvent && !attached.has(_prop2.__nodeID)) {\n            _prop2.attachEvent(node, _key2);\n          } else if (has('current', _prop2) && _prop2.current instanceof WorkletEventHandler && _prop2.current.reattachNeeded) {\n            _prop2.current.registerForEvents(viewTag, _key2);\n            _prop2.current.reattachNeeded = false;\n          }\n        }\n      }\n    }, {\n      key: \"_attachProps\",\n      value: function _attachProps(nextProps) {\n        var oldPropsAnimated = this._propsAnimated;\n        this._propsAnimated = createOrReusePropsNode(nextProps, this._animatedPropsCallback, oldPropsAnimated);\n        if (oldPropsAnimated !== this._propsAnimated) {\n          oldPropsAnimated && oldPropsAnimated.__detach();\n        }\n      }\n    }, {\n      key: \"_updateFromNative\",\n      value: function _updateFromNative(props) {\n        var _a, _b;\n        if (options === null || options === void 0 ? void 0 : options.setNativeProps) {\n          options.setNativeProps(this._component, props);\n        } else {\n          (_b = (_a = this._component) === null || _a === void 0 ? void 0 : _a.setNativeProps) === null || _b === void 0 ? void 0 : _b.call(_a, props);\n        }\n      }\n    }, {\n      key: \"_attachPropUpdater\",\n      value: function _attachPropUpdater() {\n        var viewTag = findNodeHandle(this);\n        NODE_MAPPING.set(viewTag, this);\n        if (NODE_MAPPING.size === 1) {\n          ReanimatedEventEmitter.addListener('onReanimatedPropsChange', listener);\n        }\n      }\n    }, {\n      key: \"_attachAnimatedStyles\",\n      value: function _attachAnimatedStyles() {\n        var _this2 = this;\n        var _a, _b, _c;\n        var styles = this.props.style ? onlyAnimatedStyles(flattenArray(this.props.style)) : [];\n        var prevStyles = this._styles;\n        this._styles = styles;\n        var prevAnimatedProps = this._animatedProps;\n        this._animatedProps = this.props.animatedProps;\n        var viewTag;\n        var viewName;\n        if (Platform.OS === 'web') {\n          viewTag = findNodeHandle(this);\n          viewName = null;\n        } else {\n          var hostInstance = RNRenderer.findHostInstance_DEPRECATED(this);\n          if (!hostInstance) {\n            throw new Error('Cannot find host instance for this component. Maybe it renders nothing?');\n          }\n          viewTag = hostInstance === null || hostInstance === void 0 ? void 0 : hostInstance._nativeTag;\n          viewName = (_a = hostInstance === null || hostInstance === void 0 ? void 0 : hostInstance.viewConfig) === null || _a === void 0 ? void 0 : _a.uiViewClassName;\n          var hasReanimated2Props = ((_b = this.props.animatedProps) === null || _b === void 0 ? void 0 : _b.viewDescriptors) || styles.length;\n          if (hasReanimated2Props && (hostInstance === null || hostInstance === void 0 ? void 0 : hostInstance.viewConfig)) {\n            adaptViewConfig(hostInstance.viewConfig);\n          }\n        }\n        this._viewTag = viewTag;\n        if (prevStyles) {\n          var hasOneSameStyle = styles.length === 1 && prevStyles.length === 1 && isSameAnimatedStyle(styles[0], prevStyles[0]);\n          if (!hasOneSameStyle) {\n            var _loop = function _loop(prevStyle) {\n              var isPresent = styles.some(function (style) {\n                return isSameAnimatedStyle(style, prevStyle);\n              });\n              if (!isPresent) {\n                prevStyle.viewDescriptors.remove(viewTag);\n              }\n            };\n            for (var prevStyle of prevStyles) {\n              _loop(prevStyle);\n            }\n          }\n        }\n        styles.forEach(function (style) {\n          style.viewDescriptors.add({\n            tag: viewTag,\n            name: viewName\n          });\n          if (isJest()) {\n            _this2.animatedStyle.value = Object.assign(Object.assign({}, _this2.animatedStyle.value), style.initial.value);\n            style.animatedStyle.current = _this2.animatedStyle;\n          }\n        });\n        if (prevAnimatedProps && !isSameAnimatedProps(prevAnimatedProps, this.props.animatedProps)) {\n          prevAnimatedProps.viewDescriptors.remove(viewTag);\n        }\n        if ((_c = this.props.animatedProps) === null || _c === void 0 ? void 0 : _c.viewDescriptors) {\n          this.props.animatedProps.viewDescriptors.add({\n            tag: viewTag,\n            name: viewName\n          });\n        }\n      }\n    }, {\n      key: \"_detachPropUpdater\",\n      value: function _detachPropUpdater() {\n        var viewTag = findNodeHandle(this);\n        NODE_MAPPING.delete(viewTag);\n        if (NODE_MAPPING.size === 0) {\n          ReanimatedEventEmitter.removeAllListeners('onReanimatedPropsChange');\n        }\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps) {\n        this._attachProps(this.props);\n        this._reattachNativeEvents(prevProps);\n        this._propsAnimated && this._propsAnimated.setNativeView(this._component);\n        this._attachAnimatedStyles();\n      }\n    }, {\n      key: \"_filterNonAnimatedStyle\",\n      value: function _filterNonAnimatedStyle(inputStyle) {\n        var style = {};\n        for (var key in inputStyle) {\n          var value = inputStyle[key];\n          if (!hasAnimatedNodes(value)) {\n            style[key] = value;\n          } else if (value instanceof AnimatedValue) {\n            style[key] = value._startingValue;\n          }\n        }\n        return style;\n      }\n    }, {\n      key: \"_filterNonAnimatedProps\",\n      value: function _filterNonAnimatedProps(inputProps) {\n        var _this3 = this;\n        var props = {};\n        var _loop2 = function _loop2() {\n          var value = inputProps[key];\n          if (key === 'style') {\n            var styleProp = inputProps.style;\n            var styles = flattenArray(styleProp !== null && styleProp !== void 0 ? styleProp : []);\n            var processedStyle = styles.map(function (style) {\n              if (style && style.viewDescriptors) {\n                style.viewsRef.add(_this3);\n                if (_this3._isFirstRender) {\n                  _this3.initialStyle = Object.assign(Object.assign({}, style.initial.value), initialUpdaterRun(style.initial.updater));\n                }\n                return _this3.initialStyle;\n              } else {\n                return style;\n              }\n            });\n            props[key] = _this3._filterNonAnimatedStyle(StyleSheet.flatten(processedStyle));\n          } else if (key === 'animatedProps') {\n            var animatedProp = inputProps.animatedProps;\n            if (animatedProp.initial !== undefined) {\n              Object.keys(animatedProp.initial.value).forEach(function (key) {\n                var _a, _b;\n                props[key] = (_a = animatedProp.initial) === null || _a === void 0 ? void 0 : _a.value[key];\n                (_b = animatedProp.viewsRef) === null || _b === void 0 ? void 0 : _b.add(_this3);\n              });\n            }\n          } else if (value instanceof AnimatedEvent) {\n            props[key] = dummyListener;\n          } else if (has('current', value) && value.current instanceof WorkletEventHandler) {\n            if (value.current.eventNames.length > 0) {\n              value.current.eventNames.forEach(function (eventName) {\n                props[eventName] = has('listeners', value.current) ? value.current.listeners[eventName] : dummyListener;\n              });\n            } else {\n              props[key] = dummyListener;\n            }\n          } else if (!(value instanceof AnimatedNode)) {\n            if (key !== 'onGestureHandlerStateChange' || !isChromeDebugger()) {\n              props[key] = value;\n            }\n          } else if (value instanceof AnimatedValue) {\n            props[key] = value._startingValue;\n          }\n        };\n        for (var key in inputProps) {\n          _loop2();\n        }\n        return props;\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var props = this._filterNonAnimatedProps(this.props);\n        if (isJest()) {\n          props.animatedStyle = this.animatedStyle;\n        }\n        if (this._isFirstRender) {\n          this._isFirstRender = false;\n        }\n        var platformProps = Platform.select({\n          web: {},\n          default: {\n            collapsable: false\n          }\n        });\n        return _jsx(Component, _objectSpread(_objectSpread({}, props), {}, {\n          ref: this._setComponentRef\n        }, platformProps));\n      }\n    }]);\n    return AnimatedComponent;\n  }(React.Component);\n  AnimatedComponent.displayName = \"AnimatedComponent(\" + (Component.displayName || Component.name || 'Component') + \")\";\n  return React.forwardRef(function (props, ref) {\n    return _jsx(AnimatedComponent, _objectSpread(_objectSpread({}, props), ref === null ? null : {\n      forwardedRef: ref\n    }));\n  });\n}","map":{"version":3,"names":["React","findNodeHandle","Platform","StyleSheet","ReanimatedEventEmitter","AnimatedEvent","AnimatedNode","AnimatedValue","createOrReusePropsNode","WorkletEventHandler","setAndForwardRef","invariant","adaptViewConfig","RNRenderer","makeMutable","runOnUI","enableLayoutAnimations","DefaultEntering","DefaultExiting","DefaultLayout","isJest","isChromeDebugger","shouldBeUseWeb","initialUpdaterRun","jsx","_jsx","NODE_MAPPING","Map","listener","data","component","get","viewTag","_updateFromNative","props","dummyListener","hasAnimatedNodes","value","Array","isArray","some","item","Object","keys","key","flattenArray","array","resultArr","_flattenArray","arr","forEach","push","onlyAnimatedStyles","styles","filter","style","viewDescriptors","isSameAnimatedStyle","style1","style2","viewsRef","isSameAnimatedProps","has","x","undefined","createAnimatedComponent","Component","options","prototype","isReactComponent","AnimatedComponent","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","call","_invokeAnimatedPropsCallbackOnMount","_styles","_viewTag","_isFirstRender","animatedStyle","initialStyle","_component","_animatedPropsCallback","setNativeProps","forceUpdate","_propsAnimated","__getValue","_setComponentRef","getForwardedRef","forwardedRef","setLocalRef","ref","tag","layout","entering","exiting","build","config","sv","_f","global","LayoutAnimationRepository","registerConfig","_closure","asString","__workletHash","__location","_attachProps","_createClass","componentWillUnmount","_detachPropUpdater","__detach","_detachNativeEvents","_detachStyles","componentDidMount","setNativeView","_attachNativeEvents","_attachPropUpdater","_attachAnimatedStyles","_getEventViewRef","_a","getScrollableNode","node","componentName","displayName","name","endsWith","prop","attachEvent","current","registerForEvents","detachEvent","unregisterFromEvents","OS","remove","animatedProps","_reattachNativeEvents","prevProps","attached","Set","nextEvts","add","__nodeID","reattachNeeded","nextProps","oldPropsAnimated","_b","set","size","addListener","_this2","_c","prevStyles","prevAnimatedProps","_animatedProps","viewName","hostInstance","findHostInstance_DEPRECATED","Error","_nativeTag","viewConfig","uiViewClassName","hasReanimated2Props","length","hasOneSameStyle","_loop","prevStyle","isPresent","assign","initial","delete","removeAllListeners","componentDidUpdate","_filterNonAnimatedStyle","inputStyle","_startingValue","_filterNonAnimatedProps","inputProps","_this3","_loop2","styleProp","processedStyle","map","updater","flatten","animatedProp","eventNames","eventName","listeners","render","platformProps","select","web","default","collapsable","_objectSpread","forwardRef"],"sources":["E:/4 -ReactNative/Final-Year-Project/FYP3/AwesomeProject/node_modules/react-native-reanimated/lib/createAnimatedComponent.js"],"sourcesContent":["import React from 'react';\r\nimport { findNodeHandle, Platform, StyleSheet } from 'react-native';\r\nimport ReanimatedEventEmitter from './ReanimatedEventEmitter';\r\n// @ts-ignore JS file\r\nimport AnimatedEvent from './reanimated1/core/AnimatedEvent';\r\n// @ts-ignore JS file\r\nimport AnimatedNode from './reanimated1/core/AnimatedNode';\r\n// @ts-ignore JS file\r\nimport AnimatedValue from './reanimated1/core/AnimatedValue';\r\n// @ts-ignore JS file\r\nimport { createOrReusePropsNode } from './reanimated1/core/AnimatedProps';\r\nimport WorkletEventHandler from './reanimated2/WorkletEventHandler';\r\nimport setAndForwardRef from './setAndForwardRef';\r\nimport './reanimated2/layoutReanimation/LayoutAnimationRepository';\r\nimport invariant from 'invariant';\r\nimport { adaptViewConfig } from './ConfigHelper';\r\nimport { RNRenderer } from './reanimated2/platform-specific/RNRenderer';\r\nimport { makeMutable, runOnUI, enableLayoutAnimations, } from './reanimated2/core';\r\nimport { DefaultEntering, DefaultExiting, DefaultLayout, } from './reanimated2/layoutReanimation/defaultAnimations/Default';\r\nimport { isJest, isChromeDebugger, shouldBeUseWeb, } from './reanimated2/PlatformChecker';\r\nimport { initialUpdaterRun } from './reanimated2/animation';\r\nconst NODE_MAPPING = new Map();\r\nfunction listener(data) {\r\n    const component = NODE_MAPPING.get(data.viewTag);\r\n    component && component._updateFromNative(data.props);\r\n}\r\nfunction dummyListener() {\r\n    // empty listener we use to assign to listener properties for which animated\r\n    // event is used.\r\n}\r\nfunction hasAnimatedNodes(value) {\r\n    if (value instanceof AnimatedNode) {\r\n        return true;\r\n    }\r\n    if (Array.isArray(value)) {\r\n        return value.some((item) => hasAnimatedNodes(item));\r\n    }\r\n    if (value && typeof value === 'object') {\r\n        return Object.keys(value).some((key) => hasAnimatedNodes(value[key]));\r\n    }\r\n    return false;\r\n}\r\nfunction flattenArray(array) {\r\n    if (!Array.isArray(array)) {\r\n        return [array];\r\n    }\r\n    const resultArr = [];\r\n    const _flattenArray = (arr) => {\r\n        arr.forEach((item) => {\r\n            if (Array.isArray(item)) {\r\n                _flattenArray(item);\r\n            }\r\n            else {\r\n                resultArr.push(item);\r\n            }\r\n        });\r\n    };\r\n    _flattenArray(array);\r\n    return resultArr;\r\n}\r\nfunction onlyAnimatedStyles(styles) {\r\n    return styles.filter((style) => style === null || style === void 0 ? void 0 : style.viewDescriptors);\r\n}\r\nfunction isSameAnimatedStyle(style1, style2) {\r\n    // We cannot use equality check to compare useAnimatedStyle outputs directly.\r\n    // Instead, we can compare its viewsRefs.\r\n    return (style1 === null || style1 === void 0 ? void 0 : style1.viewsRef) === (style2 === null || style2 === void 0 ? void 0 : style2.viewsRef);\r\n}\r\nconst isSameAnimatedProps = isSameAnimatedStyle;\r\nconst has = (key, x) => {\r\n    if (typeof x === 'function' || typeof x === 'object') {\r\n        if (x === null || x === undefined) {\r\n            return false;\r\n        }\r\n        else {\r\n            return key in x;\r\n        }\r\n    }\r\n    return false;\r\n};\r\nexport default function createAnimatedComponent(Component, options) {\r\n    invariant(typeof Component !== 'function' ||\r\n        (Component.prototype && Component.prototype.isReactComponent), '`createAnimatedComponent` does not support stateless functional components; ' +\r\n        'use a class component instead.');\r\n    class AnimatedComponent extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this._invokeAnimatedPropsCallbackOnMount = false;\r\n            this._styles = null;\r\n            this._viewTag = -1;\r\n            this._isFirstRender = true;\r\n            this.animatedStyle = { value: {} };\r\n            this.initialStyle = {};\r\n            this._component = null;\r\n            // The system is best designed when setNativeProps is implemented. It is\r\n            // able to avoid re-rendering and directly set the attributes that changed.\r\n            // However, setNativeProps can only be implemented on native components\r\n            // If you want to animate a composite component, you need to re-render it.\r\n            // In this case, we have a fallback that uses forceUpdate.\r\n            this._animatedPropsCallback = () => {\r\n                if (this._component == null) {\r\n                    // AnimatedProps is created in will-mount because it's used in render.\r\n                    // But this callback may be invoked before mount in async mode,\r\n                    // In which case we should defer the setNativeProps() call.\r\n                    // React may throw away uncommitted work in async mode,\r\n                    // So a deferred call won't always be invoked.\r\n                    this._invokeAnimatedPropsCallbackOnMount = true;\r\n                }\r\n                else if (typeof this._component.setNativeProps !== 'function') {\r\n                    this.forceUpdate();\r\n                }\r\n                else {\r\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n                    this._component.setNativeProps(this._propsAnimated.__getValue());\r\n                }\r\n            };\r\n            this._setComponentRef = setAndForwardRef({\r\n                getForwardedRef: () => this.props.forwardedRef,\r\n                setLocalRef: (ref) => {\r\n                    // TODO update config\r\n                    const tag = findNodeHandle(ref);\r\n                    if (!shouldBeUseWeb() &&\r\n                        (this.props.layout || this.props.entering || this.props.exiting) &&\r\n                        tag != null) {\r\n                        enableLayoutAnimations(true, false);\r\n                        let layout = this.props.layout ? this.props.layout : DefaultLayout;\r\n                        let entering = this.props.entering\r\n                            ? this.props.entering\r\n                            : DefaultEntering;\r\n                        let exiting = this.props.exiting\r\n                            ? this.props.exiting\r\n                            : DefaultExiting;\r\n                        if (has('build', layout)) {\r\n                            layout = layout.build();\r\n                        }\r\n                        if (has('build', entering)) {\r\n                            entering = entering.build();\r\n                        }\r\n                        if (has('build', exiting)) {\r\n                            exiting = exiting.build();\r\n                        }\r\n                        const config = {\r\n                            layout,\r\n                            entering,\r\n                            exiting,\r\n                            sv: this.sv,\r\n                        };\r\n                        runOnUI(() => {\r\n                            'worklet';\r\n                            global.LayoutAnimationRepository.registerConfig(tag, config);\r\n                        })();\r\n                    }\r\n                    if (ref !== this._component) {\r\n                        this._component = ref;\r\n                    }\r\n                },\r\n            });\r\n            this._attachProps(this.props);\r\n            if (isJest()) {\r\n                this.animatedStyle = { value: {} };\r\n            }\r\n            this.sv = makeMutable({});\r\n        }\r\n        componentWillUnmount() {\r\n            this._detachPropUpdater();\r\n            this._propsAnimated && this._propsAnimated.__detach();\r\n            this._detachNativeEvents();\r\n            this._detachStyles();\r\n            this.sv = null;\r\n        }\r\n        componentDidMount() {\r\n            if (this._invokeAnimatedPropsCallbackOnMount) {\r\n                this._invokeAnimatedPropsCallbackOnMount = false;\r\n                this._animatedPropsCallback();\r\n            }\r\n            this._propsAnimated &&\r\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n                this._propsAnimated.setNativeView(this._component);\r\n            this._attachNativeEvents();\r\n            this._attachPropUpdater();\r\n            this._attachAnimatedStyles();\r\n        }\r\n        _getEventViewRef() {\r\n            var _a;\r\n            // Make sure to get the scrollable node for components that implement\r\n            // `ScrollResponder.Mixin`.\r\n            return ((_a = this._component) === null || _a === void 0 ? void 0 : _a.getScrollableNode) ? this._component.getScrollableNode()\r\n                : this._component;\r\n        }\r\n        _attachNativeEvents() {\r\n            const node = this._getEventViewRef();\r\n            let viewTag = findNodeHandle((options === null || options === void 0 ? void 0 : options.setNativeProps) ? this : node);\r\n            const componentName = Component.displayName || Component.name;\r\n            if ((componentName === null || componentName === void 0 ? void 0 : componentName.endsWith('FlashList')) && this._component) {\r\n                // @ts-ignore it's FlashList specific: https://github.com/Shopify/flash-list/blob/218f314e63806b4fe926741ef73f8b9cd6ebc7eb/src/FlashList.tsx#L815\r\n                viewTag = findNodeHandle(this._component.getScrollableNode());\r\n            }\r\n            for (const key in this.props) {\r\n                const prop = this.props[key];\r\n                if (prop instanceof AnimatedEvent) {\r\n                    prop.attachEvent(node, key);\r\n                }\r\n                else if (has('current', prop) &&\r\n                    prop.current instanceof WorkletEventHandler) {\r\n                    prop.current.registerForEvents(viewTag, key);\r\n                }\r\n            }\r\n        }\r\n        _detachNativeEvents() {\r\n            const node = this._getEventViewRef();\r\n            for (const key in this.props) {\r\n                const prop = this.props[key];\r\n                if (prop instanceof AnimatedEvent) {\r\n                    prop.detachEvent(node, key);\r\n                }\r\n                else if (has('current', prop) &&\r\n                    prop.current instanceof WorkletEventHandler) {\r\n                    prop.current.unregisterFromEvents();\r\n                }\r\n            }\r\n        }\r\n        _detachStyles() {\r\n            var _a;\r\n            if (Platform.OS === 'web' && this._styles !== null) {\r\n                for (const style of this._styles) {\r\n                    if (style === null || style === void 0 ? void 0 : style.viewsRef) {\r\n                        style.viewsRef.remove(this);\r\n                    }\r\n                }\r\n            }\r\n            else if (this._viewTag !== -1 && this._styles !== null) {\r\n                for (const style of this._styles) {\r\n                    style.viewDescriptors.remove(this._viewTag);\r\n                }\r\n                if ((_a = this.props.animatedProps) === null || _a === void 0 ? void 0 : _a.viewDescriptors) {\r\n                    this.props.animatedProps.viewDescriptors.remove(this._viewTag);\r\n                }\r\n            }\r\n        }\r\n        _reattachNativeEvents(prevProps) {\r\n            const node = this._getEventViewRef();\r\n            const attached = new Set();\r\n            const nextEvts = new Set();\r\n            let viewTag;\r\n            for (const key in this.props) {\r\n                const prop = this.props[key];\r\n                if (prop instanceof AnimatedEvent) {\r\n                    nextEvts.add(prop.__nodeID);\r\n                }\r\n                else if (has('current', prop) &&\r\n                    prop.current instanceof WorkletEventHandler) {\r\n                    if (viewTag === undefined) {\r\n                        viewTag = prop.current.viewTag;\r\n                    }\r\n                }\r\n            }\r\n            for (const key in prevProps) {\r\n                const prop = this.props[key];\r\n                if (prop instanceof AnimatedEvent) {\r\n                    if (!nextEvts.has(prop.__nodeID)) {\r\n                        // event was in prev props but not in current props, we detach\r\n                        prop.detachEvent(node, key);\r\n                    }\r\n                    else {\r\n                        // event was in prev and is still in current props\r\n                        attached.add(prop.__nodeID);\r\n                    }\r\n                }\r\n                else if (has('current', prop) &&\r\n                    prop.current instanceof WorkletEventHandler &&\r\n                    prop.current.reattachNeeded) {\r\n                    prop.current.unregisterFromEvents();\r\n                }\r\n            }\r\n            for (const key in this.props) {\r\n                const prop = this.props[key];\r\n                if (prop instanceof AnimatedEvent &&\r\n                    !attached.has(prop.__nodeID)) {\r\n                    // not yet attached\r\n                    prop.attachEvent(node, key);\r\n                }\r\n                else if (has('current', prop) &&\r\n                    prop.current instanceof WorkletEventHandler &&\r\n                    prop.current.reattachNeeded) {\r\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n                    prop.current.registerForEvents(viewTag, key);\r\n                    prop.current.reattachNeeded = false;\r\n                }\r\n            }\r\n        }\r\n        _attachProps(nextProps) {\r\n            const oldPropsAnimated = this._propsAnimated;\r\n            this._propsAnimated = createOrReusePropsNode(nextProps, this._animatedPropsCallback, oldPropsAnimated);\r\n            // If prop node has been reused we don't need to call into \"__detach\"\r\n            if (oldPropsAnimated !== this._propsAnimated) {\r\n                // When you call detach, it removes the element from the parent list\r\n                // of children. If it goes to 0, then the parent also detaches itself\r\n                // and so on.\r\n                // An optimization is to attach the new elements and THEN detach the old\r\n                // ones instead of detaching and THEN attaching.\r\n                // This way the intermediate state isn't to go to 0 and trigger\r\n                // this expensive recursive detaching to then re-attach everything on\r\n                // the very next operation.\r\n                oldPropsAnimated && oldPropsAnimated.__detach();\r\n            }\r\n        }\r\n        _updateFromNative(props) {\r\n            var _a, _b;\r\n            if (options === null || options === void 0 ? void 0 : options.setNativeProps) {\r\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n                options.setNativeProps(this._component, props);\r\n            }\r\n            else {\r\n                // eslint-disable-next-line no-unused-expressions\r\n                (_b = (_a = this._component) === null || _a === void 0 ? void 0 : _a.setNativeProps) === null || _b === void 0 ? void 0 : _b.call(_a, props);\r\n            }\r\n        }\r\n        _attachPropUpdater() {\r\n            const viewTag = findNodeHandle(this);\r\n            NODE_MAPPING.set(viewTag, this);\r\n            if (NODE_MAPPING.size === 1) {\r\n                ReanimatedEventEmitter.addListener('onReanimatedPropsChange', listener);\r\n            }\r\n        }\r\n        _attachAnimatedStyles() {\r\n            var _a, _b, _c;\r\n            const styles = this.props.style\r\n                ? onlyAnimatedStyles(flattenArray(this.props.style))\r\n                : [];\r\n            const prevStyles = this._styles;\r\n            this._styles = styles;\r\n            const prevAnimatedProps = this._animatedProps;\r\n            this._animatedProps = this.props.animatedProps;\r\n            let viewTag;\r\n            let viewName;\r\n            if (Platform.OS === 'web') {\r\n                viewTag = findNodeHandle(this);\r\n                viewName = null;\r\n            }\r\n            else {\r\n                // hostInstance can be null for a component that doesn't render anything (render function returns null). Example: svg Stop: https://github.com/react-native-svg/react-native-svg/blob/develop/src/elements/Stop.tsx\r\n                const hostInstance = RNRenderer.findHostInstance_DEPRECATED(this);\r\n                if (!hostInstance) {\r\n                    throw new Error('Cannot find host instance for this component. Maybe it renders nothing?');\r\n                }\r\n                // we can access view tag in the same way it's accessed here https://github.com/facebook/react/blob/e3f4eb7272d4ca0ee49f27577156b57eeb07cf73/packages/react-native-renderer/src/ReactFabric.js#L146\r\n                viewTag = hostInstance === null || hostInstance === void 0 ? void 0 : hostInstance._nativeTag;\r\n                /**\r\n                 * RN uses viewConfig for components for storing different properties of the component(example: https://github.com/facebook/react-native/blob/master/Libraries/Components/ScrollView/ScrollViewViewConfig.js#L16).\r\n                 * The name we're looking for is in the field named uiViewClassName.\r\n                 */\r\n                viewName = (_a = hostInstance === null || hostInstance === void 0 ? void 0 : hostInstance.viewConfig) === null || _a === void 0 ? void 0 : _a.uiViewClassName;\r\n                // update UI props whitelist for this view\r\n                const hasReanimated2Props = ((_b = this.props.animatedProps) === null || _b === void 0 ? void 0 : _b.viewDescriptors) || styles.length;\r\n                if (hasReanimated2Props && (hostInstance === null || hostInstance === void 0 ? void 0 : hostInstance.viewConfig)) {\r\n                    adaptViewConfig(hostInstance.viewConfig);\r\n                }\r\n            }\r\n            this._viewTag = viewTag;\r\n            // remove old styles\r\n            if (prevStyles) {\r\n                // in most of the cases, views have only a single animated style and it remains unchanged\r\n                const hasOneSameStyle = styles.length === 1 &&\r\n                    prevStyles.length === 1 &&\r\n                    isSameAnimatedStyle(styles[0], prevStyles[0]);\r\n                if (!hasOneSameStyle) {\r\n                    // otherwise, remove each style that is not present in new styles\r\n                    for (const prevStyle of prevStyles) {\r\n                        const isPresent = styles.some((style) => isSameAnimatedStyle(style, prevStyle));\r\n                        if (!isPresent) {\r\n                            prevStyle.viewDescriptors.remove(viewTag);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            styles.forEach((style) => {\r\n                style.viewDescriptors.add({ tag: viewTag, name: viewName });\r\n                if (isJest()) {\r\n                    /**\r\n                     * We need to connect Jest's TestObject instance whose contains just props object\r\n                     * with the updateProps() function where we update the properties of the component.\r\n                     * We can't update props object directly because TestObject contains a copy of props - look at render function:\r\n                     * const props = this._filterNonAnimatedProps(this.props);\r\n                     */\r\n                    this.animatedStyle.value = Object.assign(Object.assign({}, this.animatedStyle.value), style.initial.value);\r\n                    style.animatedStyle.current = this.animatedStyle;\r\n                }\r\n            });\r\n            // detach old animatedProps\r\n            if (prevAnimatedProps &&\r\n                !isSameAnimatedProps(prevAnimatedProps, this.props.animatedProps)) {\r\n                prevAnimatedProps.viewDescriptors.remove(viewTag);\r\n            }\r\n            // attach animatedProps property\r\n            if ((_c = this.props.animatedProps) === null || _c === void 0 ? void 0 : _c.viewDescriptors) {\r\n                this.props.animatedProps.viewDescriptors.add({\r\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n                    tag: viewTag,\r\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n                    name: viewName,\r\n                });\r\n            }\r\n        }\r\n        _detachPropUpdater() {\r\n            const viewTag = findNodeHandle(this);\r\n            NODE_MAPPING.delete(viewTag);\r\n            if (NODE_MAPPING.size === 0) {\r\n                ReanimatedEventEmitter.removeAllListeners('onReanimatedPropsChange');\r\n            }\r\n        }\r\n        componentDidUpdate(prevProps) {\r\n            this._attachProps(this.props);\r\n            this._reattachNativeEvents(prevProps);\r\n            this._propsAnimated &&\r\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n                this._propsAnimated.setNativeView(this._component);\r\n            this._attachAnimatedStyles();\r\n        }\r\n        _filterNonAnimatedStyle(inputStyle) {\r\n            const style = {};\r\n            for (const key in inputStyle) {\r\n                const value = inputStyle[key];\r\n                if (!hasAnimatedNodes(value)) {\r\n                    style[key] = value;\r\n                }\r\n                else if (value instanceof AnimatedValue) {\r\n                    // if any style in animated component is set directly to the `Value` we set those styles to the first value of `Value` node in order\r\n                    // to avoid flash of default styles when `Value` is being asynchrounously sent via bridge and initialized in the native side.\r\n                    style[key] = value._startingValue;\r\n                }\r\n            }\r\n            return style;\r\n        }\r\n        _filterNonAnimatedProps(inputProps) {\r\n            const props = {};\r\n            for (const key in inputProps) {\r\n                const value = inputProps[key];\r\n                if (key === 'style') {\r\n                    const styleProp = inputProps.style;\r\n                    const styles = flattenArray(styleProp !== null && styleProp !== void 0 ? styleProp : []);\r\n                    const processedStyle = styles.map((style) => {\r\n                        if (style && style.viewDescriptors) {\r\n                            // this is how we recognize styles returned by useAnimatedStyle\r\n                            style.viewsRef.add(this);\r\n                            if (this._isFirstRender) {\r\n                                this.initialStyle = Object.assign(Object.assign({}, style.initial.value), initialUpdaterRun(style.initial.updater));\r\n                            }\r\n                            return this.initialStyle;\r\n                        }\r\n                        else {\r\n                            return style;\r\n                        }\r\n                    });\r\n                    props[key] = this._filterNonAnimatedStyle(StyleSheet.flatten(processedStyle));\r\n                }\r\n                else if (key === 'animatedProps') {\r\n                    const animatedProp = inputProps.animatedProps;\r\n                    if (animatedProp.initial !== undefined) {\r\n                        Object.keys(animatedProp.initial.value).forEach((key) => {\r\n                            var _a, _b;\r\n                            props[key] = (_a = animatedProp.initial) === null || _a === void 0 ? void 0 : _a.value[key];\r\n                            (_b = animatedProp.viewsRef) === null || _b === void 0 ? void 0 : _b.add(this);\r\n                        });\r\n                    }\r\n                }\r\n                else if (value instanceof AnimatedEvent) {\r\n                    // we cannot filter out event listeners completely as some components\r\n                    // rely on having a callback registered in order to generate events\r\n                    // alltogether. Therefore we provide a dummy callback here to allow\r\n                    // native event dispatcher to hijack events.\r\n                    props[key] = dummyListener;\r\n                }\r\n                else if (has('current', value) &&\r\n                    value.current instanceof WorkletEventHandler) {\r\n                    if (value.current.eventNames.length > 0) {\r\n                        value.current.eventNames.forEach((eventName) => {\r\n                            props[eventName] = has('listeners', value.current)\r\n                                ? value.current.listeners[eventName]\r\n                                : dummyListener;\r\n                        });\r\n                    }\r\n                    else {\r\n                        props[key] = dummyListener;\r\n                    }\r\n                }\r\n                else if (!(value instanceof AnimatedNode)) {\r\n                    if (key !== 'onGestureHandlerStateChange' || !isChromeDebugger()) {\r\n                        props[key] = value;\r\n                    }\r\n                }\r\n                else if (value instanceof AnimatedValue) {\r\n                    // if any prop in animated component is set directly to the `Value` we set those props to the first value of `Value` node in order\r\n                    // to avoid default values for a short moment when `Value` is being asynchrounously sent via bridge and initialized in the native side.\r\n                    props[key] = value._startingValue;\r\n                }\r\n            }\r\n            return props;\r\n        }\r\n        render() {\r\n            const props = this._filterNonAnimatedProps(this.props);\r\n            if (isJest()) {\r\n                props.animatedStyle = this.animatedStyle;\r\n            }\r\n            if (this._isFirstRender) {\r\n                this._isFirstRender = false;\r\n            }\r\n            const platformProps = Platform.select({\r\n                web: {},\r\n                default: { collapsable: false },\r\n            });\r\n            return (<Component {...props} ref={this._setComponentRef} {...platformProps}/>);\r\n        }\r\n    }\r\n    AnimatedComponent.displayName = `AnimatedComponent(${Component.displayName || Component.name || 'Component'})`;\r\n    return React.forwardRef((props, ref) => {\r\n        return (<AnimatedComponent {...props} {...(ref === null ? null : { forwardedRef: ref })}/>);\r\n    });\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}