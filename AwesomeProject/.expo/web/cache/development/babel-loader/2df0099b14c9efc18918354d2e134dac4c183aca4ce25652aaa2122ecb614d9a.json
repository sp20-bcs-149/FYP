{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction EmailAuthentication(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    verifyemail = _useState2[0],\n    setverifyemail = _useState2[1];\n  console.log(email, password);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: email\n    }), _jsx(View, {\n      style: styles.inputContainer,\n      children: _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Enter your email verify Code\",\n        keyboardType: \"email-address\",\n        autoCapitalize: \"none\",\n        value: verifyemail,\n        onChangeText: function onChangeText(text) {\n          return setverifyemail(text);\n        }\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Submit\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  inputContainer: {\n    width: '80%',\n    marginBottom: 20\n  },\n  input: {\n    height: 40,\n    borderColor: '#333',\n    borderWidth: 1,\n    paddingHorizontal: 10,\n    borderRadius: 5\n  },\n  button: {\n    backgroundColor: '#007AFF',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 5\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 16,\n    textAlign: 'center'\n  }\n});\nexport default EmailAuthentication;","map":{"version":3,"names":["React","useState","View","TextInput","StyleSheet","TouchableOpacity","Text","jsx","_jsx","jsxs","_jsxs","EmailAuthentication","_ref","navigation","_useState","_useState2","_slicedToArray","verifyemail","setverifyemail","console","log","email","password","style","styles","container","children","inputContainer","input","placeholder","keyboardType","autoCapitalize","value","onChangeText","text","button","buttonText","create","flex","justifyContent","alignItems","width","marginBottom","height","borderColor","borderWidth","paddingHorizontal","borderRadius","backgroundColor","paddingVertical","color","fontSize","textAlign"],"sources":["E:/4 -ReactNative/Final-Year-Project/FYP3/AwesomeProject/Screen/Authenticate.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, TextInput, StyleSheet, TouchableOpacity, Text } from 'react-native';\r\n\r\nfunction EmailAuthentication({navigation}) {\r\n  const [verifyemail, setverifyemail] = useState('');\r\n    // const email = route.params?.email\r\n  console.log(email,password);\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text>\r\n        {\r\n            email\r\n        }\r\n      </Text>\r\n\r\n      <View style={styles.inputContainer}>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Enter your email verify Code\"\r\n          keyboardType=\"email-address\"\r\n          autoCapitalize=\"none\"\r\n          value={verifyemail}\r\n          onChangeText={(text) => setverifyemail(text)}\r\n        />\r\n      </View>\r\n      <TouchableOpacity style={styles.button}>\r\n        <Text style={styles.buttonText}>Submit</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  inputContainer: {\r\n    width: '80%',\r\n    marginBottom: 20,\r\n  },\r\n  input: {\r\n    height: 40,\r\n    borderColor: '#333',\r\n    borderWidth: 1,\r\n    paddingHorizontal: 10,\r\n    borderRadius: 5,\r\n  },\r\n  button: {\r\n    backgroundColor: '#007AFF',\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 20,\r\n    borderRadius: 5,\r\n  },\r\n  buttonText: {\r\n    color: 'white',\r\n    fontSize: 16,\r\n    textAlign: 'center',\r\n  },\r\n});\r\nexport default EmailAuthentication;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGxC,SAASC,mBAAmBA,CAAAC,IAAA,EAAe;EAAA,IAAbC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EACtC,IAAAC,SAAA,GAAsCb,QAAQ,CAAC,EAAE,CAAC;IAAAc,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA3CG,WAAW,GAAAF,UAAA;IAAEG,cAAc,GAAAH,UAAA;EAElCI,OAAO,CAACC,GAAG,CAACC,KAAK,EAACC,QAAQ,CAAC;EAC3B,OACEZ,KAAA,CAACR,IAAI;IAACqB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BlB,IAAA,CAACF,IAAI;MAAAoB,QAAA,EAECL;IAAK,CAEL,CAAC,EAEPb,IAAA,CAACN,IAAI;MAACqB,KAAK,EAAEC,MAAM,CAACG,cAAe;MAAAD,QAAA,EACjClB,IAAA,CAACL,SAAS;QACRoB,KAAK,EAAEC,MAAM,CAACI,KAAM;QACpBC,WAAW,EAAC,8BAA8B;QAC1CC,YAAY,EAAC,eAAe;QAC5BC,cAAc,EAAC,MAAM;QACrBC,KAAK,EAAEf,WAAY;QACnBgB,YAAY,EAAE,SAAAA,aAACC,IAAI;UAAA,OAAKhB,cAAc,CAACgB,IAAI,CAAC;QAAA;MAAC,CAC9C;IAAC,CACE,CAAC,EACP1B,IAAA,CAACH,gBAAgB;MAACkB,KAAK,EAAEC,MAAM,CAACW,MAAO;MAAAT,QAAA,EACrClB,IAAA,CAACF,IAAI;QAACiB,KAAK,EAAEC,MAAM,CAACY,UAAW;QAAAV,QAAA,EAAC;MAAM,CAAM;IAAC,CAC7B,CAAC;EAAA,CACf,CAAC;AAEX;AAEA,IAAMF,MAAM,GAAGpB,UAAU,CAACiC,MAAM,CAAC;EAC/BZ,SAAS,EAAE;IACTa,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EACDb,cAAc,EAAE;IACdc,KAAK,EAAE,KAAK;IACZC,YAAY,EAAE;EAChB,CAAC;EACDd,KAAK,EAAE;IACLe,MAAM,EAAE,EAAE;IACVC,WAAW,EAAE,MAAM;IACnBC,WAAW,EAAE,CAAC;IACdC,iBAAiB,EAAE,EAAE;IACrBC,YAAY,EAAE;EAChB,CAAC;EACDZ,MAAM,EAAE;IACNa,eAAe,EAAE,SAAS;IAC1BC,eAAe,EAAE,EAAE;IACnBH,iBAAiB,EAAE,EAAE;IACrBC,YAAY,EAAE;EAChB,CAAC;EACDX,UAAU,EAAE;IACVc,KAAK,EAAE,OAAO;IACdC,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE;EACb;AACF,CAAC,CAAC;AACF,eAAezC,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}