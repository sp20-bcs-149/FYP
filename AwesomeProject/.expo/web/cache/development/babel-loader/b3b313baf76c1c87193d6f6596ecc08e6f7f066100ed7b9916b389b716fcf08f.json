{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport MapView, { Marker, PROVIDER_GOOGLE } from \"react-native-maps\";\nimport { UserLocationContext } from \".././../../Context/UserLocationContext\";\nimport PlaceMarker from \"./PlaceMarker\";\nimport Colors from \"./Colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function GoogleMapView(_ref) {\n  var placeList = _ref.placeList;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    mapRegion = _useState2[0],\n    setmapRegion = _useState2[1];\n  var _useContext = useContext(UserLocationContext),\n    location = _useContext.location,\n    setLocation = _useContext.setLocation;\n  useEffect(function () {\n    if (location) {\n      setmapRegion({\n        latitude: location.coords.latitude,\n        longitude: location.coords.longitude,\n        latitudeDelta: 0.0422,\n        longitudeDelta: 0.0421\n      });\n    }\n  }, [location]);\n  return _jsxs(View, {\n    style: {\n      marginTop: 20\n    },\n    children: [_jsx(Text, {\n      style: {\n        fontSize: 20,\n        marginBottom: 10,\n        fontWeight: \"600\",\n        fontFamily: 'raleway-bold'\n      },\n      children: \"Top Near By Places\"\n    }), _jsx(View, {\n      style: {\n        borderRadius: 20,\n        overflow: \"hidden\"\n      },\n      children: location ? _jsxs(MapView, {\n        style: {\n          width: Dimensions.get(\"screen\").width * 0.89,\n          height: Dimensions.get(\"screen\").height * 0.23\n        },\n        provider: PROVIDER_GOOGLE,\n        showsUserLocation: true,\n        region: mapRegion,\n        children: [_jsx(Marker, {\n          title: \"You\",\n          coordinate: mapRegion\n        }), placeList.map(function (item, index) {\n          return index <= 4 && _jsx(PlaceMarker, {\n            item: item\n          }, index);\n        })]\n      }) : null\n    })]\n  });\n}","map":{"version":3,"names":["React","useContext","useEffect","useState","MapView","Marker","PROVIDER_GOOGLE","UserLocationContext","PlaceMarker","Colors","jsx","_jsx","jsxs","_jsxs","GoogleMapView","_ref","placeList","_useState","_useState2","_slicedToArray","mapRegion","setmapRegion","_useContext","location","setLocation","latitude","coords","longitude","latitudeDelta","longitudeDelta","View","style","marginTop","children","Text","fontSize","marginBottom","fontWeight","fontFamily","borderRadius","overflow","width","Dimensions","get","height","provider","showsUserLocation","region","title","coordinate","map","item","index"],"sources":["E:/4 -ReactNative/Final-Year-Project/FYP3/AwesomeProject/components/user/findClinic/GoogleMapView.js"],"sourcesContent":["import { View, Text, Dimensions } from \"react-native\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport MapView, { Marker, PROVIDER_GOOGLE } from \"react-native-maps\";\r\nimport { UserLocationContext } from \".././../../Context/UserLocationContext\";\r\nimport PlaceMarker from \"./PlaceMarker\";\r\nimport Colors from \"./Colors\";\r\n\r\nexport default function GoogleMapView({placeList}) {\r\n  const [mapRegion, setmapRegion] = useState([]);\r\n\r\n  const { location, setLocation } = useContext(UserLocationContext);\r\n\r\n  useEffect(()=>{\r\n    if(location)\r\n    {\r\n        setmapRegion({\r\n            latitude: location.coords.latitude,\r\n            longitude: location.coords.longitude,\r\n            latitudeDelta: 0.0422,\r\n            longitudeDelta: 0.0421,\r\n        })\r\n    }\r\n  },[location])\r\n \r\n\r\n  return (\r\n    <View style={{ marginTop: 20 }}>\r\n      <Text style={{ fontSize: 20, \r\n        marginBottom: 10, fontWeight: \"600\",fontFamily:'raleway-bold' }}>\r\n        Top Near By Places\r\n      </Text>\r\n      <View style={{ borderRadius: 20, overflow: \"hidden\" }}>\r\n    {location?    <MapView\r\n          style={{\r\n            width: Dimensions.get(\"screen\").width * 0.89,\r\n            height: Dimensions.get(\"screen\").height * 0.23,\r\n          }}\r\n          provider={PROVIDER_GOOGLE}\r\n          showsUserLocation={true}\r\n          region={mapRegion}\r\n        >\r\n            <Marker \r\n            title=\"You\" \r\n            coordinate={mapRegion}\r\n             />\r\n            {placeList.map((item,index)=>index<=4&&(\r\n                <PlaceMarker item={item} key={index} />\r\n            ))}\r\n           \r\n        </MapView>:null} \r\n        \r\n      </View>\r\n     \r\n    </View>\r\n  );\r\n}\r\n"],"mappings":";;;;AACA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,OAAOC,OAAO,IAAIC,MAAM,EAAEC,eAAe,QAAQ,mBAAmB;AACpE,SAASC,mBAAmB;AAC5B,OAAOC,WAAW;AAClB,OAAOC,MAAM;AAAiB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE9B,eAAe,SAASC,aAAaA,CAAAC,IAAA,EAAc;EAAA,IAAZC,SAAS,GAAAD,IAAA,CAATC,SAAS;EAC9C,IAAAC,SAAA,GAAkCd,QAAQ,CAAC,EAAE,CAAC;IAAAe,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAvCG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAE9B,IAAAI,WAAA,GAAkCrB,UAAU,CAACM,mBAAmB,CAAC;IAAzDgB,QAAQ,GAAAD,WAAA,CAARC,QAAQ;IAAEC,WAAW,GAAAF,WAAA,CAAXE,WAAW;EAE7BtB,SAAS,CAAC,YAAI;IACZ,IAAGqB,QAAQ,EACX;MACIF,YAAY,CAAC;QACTI,QAAQ,EAAEF,QAAQ,CAACG,MAAM,CAACD,QAAQ;QAClCE,SAAS,EAAEJ,QAAQ,CAACG,MAAM,CAACC,SAAS;QACpCC,aAAa,EAAE,MAAM;QACrBC,cAAc,EAAE;MACpB,CAAC,CAAC;IACN;EACF,CAAC,EAAC,CAACN,QAAQ,CAAC,CAAC;EAGb,OACEV,KAAA,CAACiB,IAAI;IAACC,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAG,CAAE;IAAAC,QAAA,GAC7BtB,IAAA,CAACuB,IAAI;MAACH,KAAK,EAAE;QAAEI,QAAQ,EAAE,EAAE;QACzBC,YAAY,EAAE,EAAE;QAAEC,UAAU,EAAE,KAAK;QAACC,UAAU,EAAC;MAAe,CAAE;MAAAL,QAAA,EAAC;IAEnE,CAAM,CAAC,EACPtB,IAAA,CAACmB,IAAI;MAACC,KAAK,EAAE;QAAEQ,YAAY,EAAE,EAAE;QAAEC,QAAQ,EAAE;MAAS,CAAE;MAAAP,QAAA,EACvDV,QAAQ,GAAKV,KAAA,CAACT,OAAO;QAChB2B,KAAK,EAAE;UACLU,KAAK,EAAEC,UAAU,CAACC,GAAG,CAAC,QAAQ,CAAC,CAACF,KAAK,GAAG,IAAI;UAC5CG,MAAM,EAAEF,UAAU,CAACC,GAAG,CAAC,QAAQ,CAAC,CAACC,MAAM,GAAG;QAC5C,CAAE;QACFC,QAAQ,EAAEvC,eAAgB;QAC1BwC,iBAAiB,EAAE,IAAK;QACxBC,MAAM,EAAE3B,SAAU;QAAAa,QAAA,GAEhBtB,IAAA,CAACN,MAAM;UACP2C,KAAK,EAAC,KAAK;UACXC,UAAU,EAAE7B;QAAU,CACpB,CAAC,EACFJ,SAAS,CAACkC,GAAG,CAAC,UAACC,IAAI,EAACC,KAAK;UAAA,OAAGA,KAAK,IAAE,CAAC,IACjCzC,IAAA,CAACH,WAAW;YAAC2C,IAAI,EAAEA;UAAK,GAAMC,KAAQ,CACzC;QAAA,EAAC;MAAA,CAEG,CAAC,GAAC;IAAI,CAEX,CAAC;EAAA,CAEH,CAAC;AAEX"},"metadata":{},"sourceType":"module","externalDependencies":[]}