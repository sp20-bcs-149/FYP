{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport { UserLocationContext } from \"../../../../Context/UserLocationContext\";\nimport MapView, { Marker, PROVIDER_GOOGLE } from 'react-native-maps';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport PlaceMarker from \"../PlaceMarker\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function GoogleMapViewFull(_ref) {\n  var placeList = _ref.placeList;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    mapRegion = _useState2[0],\n    setmapRegion = _useState2[1];\n  var _useContext = useContext(UserLocationContext),\n    location = _useContext.location,\n    setLocation = _useContext.setLocation;\n  useEffect(function () {\n    if (location) {\n      setmapRegion({\n        latitude: location.coords.latitude,\n        longitude: location.coords.longitude,\n        latitudeDelta: 0.0422,\n        longitudeDelta: 0.0421\n      });\n    }\n  }, [location]);\n  return _jsx(View, {\n    children: location ? _jsxs(MapView, {\n      style: {\n        width: Dimensions.get(\"screen\").width,\n        height: Dimensions.get(\"screen\").height * 0.89\n      },\n      provider: PROVIDER_GOOGLE,\n      showsUserLocation: true,\n      region: mapRegion,\n      children: [_jsx(Marker, {\n        title: \"You\",\n        coordinate: mapRegion\n      }), placeList.map(function (item, index) {\n        return index <= 4 && _jsx(PlaceMarker, {\n          item: item\n        }, index);\n      })]\n    }) : null\n  });\n}","map":{"version":3,"names":["React","useContext","useEffect","useState","UserLocationContext","MapView","Marker","PROVIDER_GOOGLE","Dimensions","PlaceMarker","jsx","_jsx","jsxs","_jsxs","GoogleMapViewFull","_ref","placeList","_useState","_useState2","_slicedToArray","mapRegion","setmapRegion","_useContext","location","setLocation","latitude","coords","longitude","latitudeDelta","longitudeDelta","View","children","style","width","get","height","provider","showsUserLocation","region","title","coordinate","map","item","index"],"sources":["E:/4 -ReactNative/Final-Year-Project/FYP3/AwesomeProject/components/user/findClinic/search/GoogleMapViewFull.js"],"sourcesContent":["import { View, Text } from 'react-native'\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { UserLocationContext } from '../../../../Context/UserLocationContext';\r\nimport MapView, { Marker, PROVIDER_GOOGLE } from 'react-native-maps';\r\nimport { Dimensions } from 'react-native';\r\nimport PlaceMarker from '../PlaceMarker';\r\n\r\nexport default function GoogleMapViewFull({placeList}) {\r\n    const [mapRegion, setmapRegion] = useState([]);\r\n\r\n    const { location, setLocation } = useContext(UserLocationContext);\r\n  \r\n    useEffect(()=>{\r\n      if(location)\r\n      {\r\n          setmapRegion({\r\n              latitude: location.coords.latitude,\r\n              longitude: location.coords.longitude,\r\n              latitudeDelta: 0.0422,\r\n              longitudeDelta: 0.0421,\r\n          })\r\n      }\r\n    },[location])\r\n  return (\r\n    <View>\r\n          {location?    <MapView\r\n          style={{\r\n            width: Dimensions.get(\"screen\").width,\r\n            height: Dimensions.get(\"screen\").height * 0.89,\r\n          }}\r\n          provider={PROVIDER_GOOGLE}\r\n          showsUserLocation={true}\r\n          region={mapRegion}\r\n        >\r\n            <Marker \r\n            title=\"You\" \r\n            coordinate={mapRegion}\r\n             />\r\n            {placeList.map((item,index)=>index<=4&&(\r\n                <PlaceMarker item={item} key={index} />\r\n            ))}\r\n           \r\n        </MapView>:null} \r\n    </View>\r\n  )\r\n}"],"mappings":";;;AACA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,SAASC,mBAAmB;AAC5B,OAAOC,OAAO,IAAIC,MAAM,EAAEC,eAAe,QAAQ,mBAAmB;AAAC,OAAAC,UAAA;AAErE,OAAOC,WAAW;AAAuB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEzC,eAAe,SAASC,iBAAiBA,CAAAC,IAAA,EAAc;EAAA,IAAZC,SAAS,GAAAD,IAAA,CAATC,SAAS;EAChD,IAAAC,SAAA,GAAkCd,QAAQ,CAAC,EAAE,CAAC;IAAAe,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAvCG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAE9B,IAAAI,WAAA,GAAkCrB,UAAU,CAACG,mBAAmB,CAAC;IAAzDmB,QAAQ,GAAAD,WAAA,CAARC,QAAQ;IAAEC,WAAW,GAAAF,WAAA,CAAXE,WAAW;EAE7BtB,SAAS,CAAC,YAAI;IACZ,IAAGqB,QAAQ,EACX;MACIF,YAAY,CAAC;QACTI,QAAQ,EAAEF,QAAQ,CAACG,MAAM,CAACD,QAAQ;QAClCE,SAAS,EAAEJ,QAAQ,CAACG,MAAM,CAACC,SAAS;QACpCC,aAAa,EAAE,MAAM;QACrBC,cAAc,EAAE;MACpB,CAAC,CAAC;IACN;EACF,CAAC,EAAC,CAACN,QAAQ,CAAC,CAAC;EACf,OACEZ,IAAA,CAACmB,IAAI;IAAAC,QAAA,EACER,QAAQ,GAAKV,KAAA,CAACR,OAAO;MACtB2B,KAAK,EAAE;QACLC,KAAK,EAAEzB,UAAU,CAAC0B,GAAG,CAAC,QAAQ,CAAC,CAACD,KAAK;QACrCE,MAAM,EAAE3B,UAAU,CAAC0B,GAAG,CAAC,QAAQ,CAAC,CAACC,MAAM,GAAG;MAC5C,CAAE;MACFC,QAAQ,EAAE7B,eAAgB;MAC1B8B,iBAAiB,EAAE,IAAK;MACxBC,MAAM,EAAElB,SAAU;MAAAW,QAAA,GAEhBpB,IAAA,CAACL,MAAM;QACPiC,KAAK,EAAC,KAAK;QACXC,UAAU,EAAEpB;MAAU,CACpB,CAAC,EACFJ,SAAS,CAACyB,GAAG,CAAC,UAACC,IAAI,EAACC,KAAK;QAAA,OAAGA,KAAK,IAAE,CAAC,IACjChC,IAAA,CAACF,WAAW;UAACiC,IAAI,EAAEA;QAAK,GAAMC,KAAQ,CACzC;MAAA,EAAC;IAAA,CAEG,CAAC,GAAC;EAAI,CACb,CAAC;AAEX"},"metadata":{},"sourceType":"module","externalDependencies":[]}