{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport Header from \"./Header\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport CommonBtn from \"./CommonBtn\";\nimport { useRoute } from \"@react-navigation/native\";\nimport axios from \"axios\";\nimport myURL from \"../../../services/myurls\";\nimport MapView, { Marker, PROVIDER_GOOGLE } from \"react-native-maps\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar BookAppointment = function BookAppointment(_ref) {\n  var _route$params, _route$params2, _route$params3, _route$params4, _route$params5, _route$params6, _route$params7;\n  var navigation = _ref.navigation;\n  var route = useRoute();\n  var clinic = (_route$params = route.params) == null ? void 0 : _route$params.clinicName;\n  var clinic_ID = (_route$params2 = route.params) == null ? void 0 : _route$params2.clinic_ID;\n  var my_ID = (_route$params3 = route.params) == null ? void 0 : _route$params3.user;\n  var clinic_my_ID = (_route$params4 = route.params) == null ? void 0 : _route$params4.clinic_my_ID;\n  var longi = (_route$params5 = route.params) == null ? void 0 : _route$params5.longitude;\n  var lati = (_route$params6 = route.params) == null ? void 0 : _route$params6.latitude;\n  var Schedulesource = (_route$params7 = route.params) == null ? void 0 : _route$params7.Schedulesource;\n  var cnic, username_from_child, vaccinename;\n  if (Schedulesource == \"childTrackPath\") {\n    var _route$params8, _route$params9, _route$params10;\n    cnic = (_route$params8 = route.params) == null ? void 0 : _route$params8.cnic;\n    username_from_child = (_route$params9 = route.params) == null ? void 0 : _route$params9.username_from_child;\n    vaccinename = (_route$params10 = route.params) == null ? void 0 : _route$params10.vaccinename;\n    console.log(\"Navigation source: CNIN \" + Schedulesource + \" : \" + username_from_child);\n  } else {\n    console.log(\"Navigation source: \" + Schedulesource);\n  }\n  console.log(\"location \" + typeof parseFloat(longi) + \" \" + typeof parseFloat(lati));\n  console.log(\" User_id ===>\" + my_ID + \" my_clinic_ID\" + clinic_my_ID);\n  var clinicLocation = {\n    latitude: parseFloat(lati),\n    longitude: parseFloat(longi)\n  };\n  var _useState = useState(-1),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedSlot = _useState2[0],\n    setSelectedSlot = _useState2[1];\n  var _useState3 = useState(vaccinename ? vaccinename : null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedVaccine = _useState4[0],\n    setSelectedVaccine = _useState4[1];\n  var _useState5 = useState(-1),\n    _useState6 = _slicedToArray(_useState5, 2),\n    selectedDay = _useState6[0],\n    setSelectedDay = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    modalVisible = _useState8[0],\n    setModalVisible = _useState8[1];\n  var _useState9 = useState(username_from_child ? username_from_child : \"\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    patientName = _useState10[0],\n    setPatientName = _useState10[1];\n  var _useState11 = useState(cnic ? cnic : ''),\n    _useState12 = _slicedToArray(_useState11, 2),\n    cnicNumber = _useState12[0],\n    setCnicNumber = _useState12[1];\n  var _useState13 = useState(\"pending\"),\n    _useState14 = _slicedToArray(_useState13, 2),\n    status = _useState14[0],\n    setStatus = _useState14[1];\n  var _useState15 = useState(false),\n    _useState16 = _slicedToArray(_useState15, 2),\n    isDateSelected = _useState16[0],\n    setIsDateSelected = _useState16[1];\n  var _useState17 = useState(false),\n    _useState18 = _slicedToArray(_useState17, 2),\n    isSlotSelected = _useState18[0],\n    setIsSlotSelected = _useState18[1];\n  var _useState19 = useState(false),\n    _useState20 = _slicedToArray(_useState19, 2),\n    isNameEntered = _useState20[0],\n    setIsNameEntered = _useState20[1];\n  var _useState21 = useState(false),\n    _useState22 = _slicedToArray(_useState21, 2),\n    isCnicEntered = _useState22[0],\n    setIsCnicEntered = _useState22[1];\n  var _useState23 = useState([]),\n    _useState24 = _slicedToArray(_useState23, 2),\n    mydata = _useState24[0],\n    setMydata = _useState24[1];\n  var _useState25 = useState({\n      latitude: 31.5204,\n      longitude: 74.3587,\n      latitudeDelta: 0.0122,\n      longitudeDelta: 0.0121\n    }),\n    _useState26 = _slicedToArray(_useState25, 2),\n    mapRegion = _useState26[0],\n    setmapRegion = _useState26[1];\n  var _useState27 = useState([{\n      sloT: \"10:00-12:00PM\",\n      selected: false\n    }, {\n      sloT: \"12:00-02:00PM\",\n      selected: false\n    }, {\n      sloT: \"02:00-04:00PM\",\n      selected: false\n    }, {\n      sloT: \"04:00-06:00PM\",\n      selected: false\n    }, {\n      sloT: \"06:00-08:00PM\",\n      selected: false\n    }, {\n      sloT: \"08:00-10:00PM\",\n      selected: false\n    }, {\n      sloT: \"08:00-10:00PM\",\n      selected: false\n    }]),\n    _useState28 = _slicedToArray(_useState27, 2),\n    slots = _useState28[0],\n    setSlots = _useState28[1];\n  var _useState29 = useState([]),\n    _useState30 = _slicedToArray(_useState29, 2),\n    days = _useState30[0],\n    setDays = _useState30[1];\n  useEffect(function () {\n    getVaccineRecord();\n    var DaysList = [];\n    for (var i = 1; i <= getDays(new Date().getMonth() + 1); i++) {\n      DaysList.push({\n        day: i,\n        selected: false\n      });\n    }\n    setDays(DaysList);\n  }, []);\n  var getVaccineRecord = function getVaccineRecord() {\n    axios.get(myURL + \"/clinic/VaccineRecord/ID?my_ID=\" + clinic_my_ID).then(function (res) {\n      console.log(\"match User ID\" + res.data);\n      setMydata(res.data);\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n  var getDays = function getDays(month) {\n    var days = 0;\n    if (month == 1) {\n      days = 31;\n    } else if (month == 2) {\n      days = 28;\n    } else if (month == 3) {\n      days = 31;\n    } else if (month == 4) {\n      days = 30;\n    } else if (month == 5) {\n      days = 31;\n    } else if (month == 6) {\n      days = 30;\n    } else if (month == 7) {\n      days = 31;\n    } else if (month == 8) {\n      days = 31;\n    } else if (month == 9) {\n      days = 30;\n    } else if (month == 10) {\n      days = 31;\n    } else if (month == 11) {\n      days = 30;\n    } else if (month == 12) {\n      days = 31;\n    }\n    return days;\n  };\n  console.log(\"----->> \" + typeof my_ID, typeof selectedVaccine, typeof selectedDay, typeof selectedSlot, typeof patientName, typeof cnicNumber);\n  var vaccineOptions = [\"Polio\", \"Hep A\", \"Hep B\", \"Influenza\", \"Monococcal\"];\n  var handleConfirmVaccination = function handleConfirmVaccination(vaccine) {\n    setModalVisible(false);\n    setSelectedVaccine(vaccine);\n  };\n  var formatCnic = function formatCnic(input) {\n    var cnic = input.replace(/\\D/g, \"\");\n    if (cnic.length > 5) {\n      cnic = cnic.substring(0, 5) + \"-\" + cnic.substring(5, 12) + \"-\" + cnic.substring(12, 13);\n    } else if (cnic.length > 5 && cnic.length <= 12) {\n      cnic = cnic.substring(0, 5) + \"-\" + cnic.substring(5, 12);\n    }\n    setCnicNumber(cnic);\n  };\n  var handleBookAppointment = function handleBookAppointment() {\n    setIsDateSelected(false);\n    setIsSlotSelected(false);\n    setIsNameEntered(false);\n    setIsCnicEntered(false);\n    var nameRegex = /^[^\\d]+$/;\n    if (!nameRegex.test(patientName)) {\n      setIsNameEntered(true);\n      Alert.alert(\"Error\", \"Please enter patient name in alphabets\");\n      return;\n    }\n    var cnicRegex = /^([0-9]{5})[\\-]([0-9]{7})[\\-]([0-9]{1})+/;\n    if (!cnicRegex.test(cnicNumber)) {\n      setIsCnicEntered(true);\n      Alert.alert(\"Error\", \"Please enter a valid CNIC\");\n      return;\n    }\n    if (selectedDay === -1) {\n      setIsDateSelected(true);\n      Alert.alert(\"Error\", \"Please select a date\");\n      return;\n    }\n    if (selectedSlot === -1) {\n      setIsSlotSelected(true);\n      Alert.alert(\"Error\", \"Please select a slot\");\n      return;\n    }\n    var currentDate = new Date();\n    var hours = currentDate.getHours();\n    var minutes = currentDate.getMinutes();\n    var seconds = currentDate.getSeconds();\n    var formattedTime = hours + \":\" + minutes + \":\" + seconds;\n    currentTime = formattedTime;\n    axios.post(myURL + \"/user/scheduleAppointment/\", {\n      my_ID: my_ID,\n      clinic_my_ID: clinic_my_ID,\n      selectedVaccine: selectedVaccine,\n      selectedDay: selectedDay,\n      selectedSlot: selectedSlot,\n      patientName: patientName,\n      cnicNumber: cnicNumber,\n      currentTime: currentTime,\n      status: status\n    }).then(function (res) {\n      console.log(res.data);\n      Alert.alert(\"BOOK SCHEDULE\");\n      navigation.navigate(\"Success\", {\n        selectedVaccine: selectedVaccine,\n        selectedDay: days[selectedDay].day,\n        selectedSlot: slots[selectedSlot].sloT,\n        patientName: patientName,\n        cnicNumber: cnicNumber\n      });\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n  return _jsxs(ScrollView, {\n    style: styles.container,\n    contentContainerStyle: styles.container,\n    keyboardShouldPersistTaps: \"handled\",\n    keyboardDismissMode: \"on-drag\",\n    children: [_jsx(Header, {\n      icon: require(\"../../src/images/backbutton.png\"),\n      title: \"Book Appointment\",\n      navigation: navigation\n    }), _jsxs(View, {\n      style: {\n        borderRadius: 20,\n        overflow: \"hidden\"\n      },\n      children: [_jsx(MapView, {\n        style: {\n          width: Dimensions.get(\"screen\").width * 1,\n          height: Dimensions.get(\"screen\").height * 0.25,\n          alignSelf: \"center\",\n          marginBottom: 10\n        },\n        provider: PROVIDER_GOOGLE,\n        showsUserLocation: true,\n        followsUserLocation: true,\n        region: mapRegion,\n        children: _jsx(Marker, {\n          coordinate: {\n            latitude: clinicLocation.latitude,\n            longitude: clinicLocation.longitude\n          },\n          title: \"Clinic Name\",\n          description: \"Address\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return Linking.openURL(\"https://www.google.com/maps/dir/?api=1&destination=\" + clinicLocation.latitude + \",\" + clinicLocation.longitude);\n        },\n        children: _jsx(Text, {\n          style: styles.directions,\n          children: \"Get Directions\"\n        })\n      })]\n    }), _jsx(Image, {\n      source: require(\"../../src/images/vac.png\"),\n      style: styles.cliImg\n    }), _jsx(Text, {\n      style: styles.name,\n      children: clinic\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return setModalVisible(true);\n      },\n      style: styles.dropdownButton,\n      children: _jsx(Text, {\n        style: styles.dropdownButtonText,\n        children: \"Available Vaccines\"\n      })\n    }), _jsx(Modal, {\n      animationType: \"slide\",\n      transparent: true,\n      visible: modalVisible,\n      children: _jsx(View, {\n        style: styles.centeredView,\n        children: _jsx(View, {\n          style: styles.modalView,\n          children: mydata.map(function (vaccine, index) {\n            return _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return handleConfirmVaccination(vaccine.vaccine_name);\n              },\n              children: _jsx(Text, {\n                style: styles.modalText,\n                children: vaccine.vaccine_name\n              })\n            }, index);\n          })\n        })\n      })\n    }), _jsx(Text, {\n      style: styles.selectedVaccine,\n      children: selectedVaccine\n    }), _jsx(Text, {\n      style: styles.date,\n      children: \"Select Date\"\n    }), _jsx(Text, {}), _jsxs(View, {\n      style: styles.innerContainer,\n      children: [_jsx(Text, {}), _jsx(View, {\n        children: _jsx(FlatList, {\n          horizontal: true,\n          showsHorizontalScrollIndicator: false,\n          data: days,\n          keyExtractor: function keyExtractor(item, index) {\n            return index.toString();\n          },\n          renderItem: function renderItem(_ref2) {\n            var item = _ref2.item,\n              index = _ref2.index;\n            return _jsx(TouchableOpacity, {\n              style: {\n                width: 50,\n                height: 60,\n                borderRadius: 50,\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                backgroundColor: selectedDay == index ? \"#329998\" : \"#fff\",\n                borderWidth: selectedDay == index ? 0 : 1,\n                borderColor: \"#f2f2f2f2\",\n                marginLeft: 10\n              },\n              onPress: function onPress() {\n                if (item.day < new Date().getDate()) {} else {\n                  setSelectedDay(index);\n                }\n              },\n              children: _jsx(Text, {\n                style: {\n                  color: selectedDay == index ? \"#fff\" : \"#329998\",\n                  fontWeight: \"bold\",\n                  flexWrap: 'wrap'\n                },\n                children: item.day\n              })\n            });\n          }\n        })\n      }), _jsx(Text, {\n        style: styles.heading,\n        children: \"Available Slots\"\n      }), _jsx(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap'\n        },\n        children: slots.map(function (item, index) {\n          return _jsx(TouchableOpacity, {\n            style: [styles.timeSlot, {\n              borderColor: selectedSlot == index ? \"blue\" : \"black\"\n            }],\n            onPress: function onPress() {\n              setSelectedSlot(index);\n            },\n            children: _jsx(Text, {\n              style: {\n                color: selectedSlot == index ? \"blue\" : \"black\"\n              },\n              children: item.sloT\n            })\n          }, index);\n        })\n      }), _jsx(Text, {\n        style: styles.heading,\n        children: \"Patient Name\"\n      }), _jsx(TextInput, {\n        style: styles.nameInput,\n        placeholder: \"Enter Patients Name\",\n        value: patientName,\n        onChangeText: setPatientName\n      }), _jsx(Text, {\n        style: styles.heading,\n        children: \"Enter CNIC Number\"\n      }), _jsx(TextInput, {\n        style: styles.nameInput,\n        placeholder: \"Enter Patients CNIC Number\",\n        value: cnicNumber,\n        onChangeText: formatCnic\n      }), _jsx(View, {\n        style: {\n          marginTop: 20,\n          marginBottom: 20\n        },\n        children: _jsx(CommonBtn, {\n          w: 100,\n          h: 45,\n          txt: \"Book Now\",\n          status: true,\n          onClick: handleBookAppointment\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flexGrow: 1,\n    backgroundColor: \"#fff\"\n  },\n  innerContainer: {\n    padding: 20\n  },\n  cliImg: {\n    width: 100,\n    height: 100,\n    marginTop: 50,\n    alignSelf: \"center\"\n  },\n  name: {\n    fontSize: 20,\n    fontWeight: \"700\",\n    alignSelf: \"center\",\n    marginTop: 10\n  },\n  dropdownButton: {\n    marginTop: 10,\n    alignSelf: \"center\",\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    backgroundColor: \"#329998\",\n    borderRadius: 10\n  },\n  dropdownButtonText: {\n    color: \"#fff\",\n    fontSize: 16,\n    fontWeight: \"bold\"\n  },\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 10\n  },\n  modalView: {\n    margin: 10,\n    backgroundColor: \"white\",\n    borderRadius: 10,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\",\n    fontSize: 18\n  },\n  selectedVaccine: {\n    fontSize: 18,\n    alignSelf: \"center\",\n    marginTop: 10\n  },\n  heading: {\n    color: \"#000\",\n    fontSize: 18,\n    fontWeight: \"700\",\n    marginTop: 15,\n    marginLeft: 15\n  },\n  timeSlot: {\n    width: \"46%\",\n    height: 40,\n    borderRadius: 10,\n    borderWidth: 0.5,\n    margin: 6,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  nameInput: {\n    borderRadius: 10,\n    marginTop: 10,\n    width: \"94%\",\n    height: 45,\n    borderWidth: 0.5,\n    alignSelf: \"center\",\n    paddingLeft: 20\n  },\n  date: {\n    color: \"#000\",\n    fontSize: 18,\n    fontWeight: \"700\",\n    marginTop: 5,\n    marginLeft: 15,\n    marginBottom: 5\n  },\n  errorText: {\n    color: \"red\",\n    marginTop: 5,\n    marginLeft: 15,\n    fontSize: 16\n  },\n  directions: {\n    textAlign: \"center\",\n    color: \"#329998\",\n    fontSize: 16,\n    textDecorationLine: \"underline\",\n    marginTop: 10\n  }\n});\nexport default BookAppointment;","map":{"version":3,"names":["React","useEffect","useState","View","Text","StyleSheet","Image","TouchableOpacity","Modal","ScrollView","TextInput","KeyboardAvoidingView","Alert","Dimensions","Linking","Header","FlatList","CommonBtn","useRoute","axios","myURL","MapView","Marker","PROVIDER_GOOGLE","jsx","_jsx","jsxs","_jsxs","BookAppointment","_ref","_route$params","_route$params2","_route$params3","_route$params4","_route$params5","_route$params6","_route$params7","navigation","route","clinic","params","clinicName","clinic_ID","my_ID","user","clinic_my_ID","longi","longitude","lati","latitude","Schedulesource","cnic","username_from_child","vaccinename","_route$params8","_route$params9","_route$params10","console","log","parseFloat","clinicLocation","_useState","_useState2","_slicedToArray","selectedSlot","setSelectedSlot","_useState3","_useState4","selectedVaccine","setSelectedVaccine","_useState5","_useState6","selectedDay","setSelectedDay","_useState7","_useState8","modalVisible","setModalVisible","_useState9","_useState10","patientName","setPatientName","_useState11","_useState12","cnicNumber","setCnicNumber","_useState13","_useState14","status","setStatus","_useState15","_useState16","isDateSelected","setIsDateSelected","_useState17","_useState18","isSlotSelected","setIsSlotSelected","_useState19","_useState20","isNameEntered","setIsNameEntered","_useState21","_useState22","isCnicEntered","setIsCnicEntered","_useState23","_useState24","mydata","setMydata","_useState25","latitudeDelta","longitudeDelta","_useState26","mapRegion","setmapRegion","_useState27","sloT","selected","_useState28","slots","setSlots","_useState29","_useState30","days","setDays","getVaccineRecord","DaysList","i","getDays","Date","getMonth","push","day","get","then","res","data","catch","err","month","vaccineOptions","handleConfirmVaccination","vaccine","formatCnic","input","replace","length","substring","handleBookAppointment","nameRegex","test","alert","cnicRegex","currentDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","formattedTime","currentTime","post","navigate","style","styles","container","contentContainerStyle","keyboardShouldPersistTaps","keyboardDismissMode","children","icon","require","title","borderRadius","overflow","width","height","alignSelf","marginBottom","provider","showsUserLocation","followsUserLocation","region","coordinate","description","onPress","openURL","directions","source","cliImg","name","dropdownButton","dropdownButtonText","animationType","transparent","visible","centeredView","modalView","map","index","vaccine_name","modalText","date","innerContainer","horizontal","showsHorizontalScrollIndicator","keyExtractor","item","toString","renderItem","_ref2","alignItems","justifyContent","backgroundColor","borderWidth","borderColor","marginLeft","getDate","color","fontWeight","flexWrap","heading","flexDirection","timeSlot","nameInput","placeholder","value","onChangeText","marginTop","w","h","txt","onClick","create","flexGrow","padding","fontSize","paddingVertical","paddingHorizontal","flex","margin","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","textAlign","paddingLeft","errorText","textDecorationLine"],"sources":["E:/4 -ReactNative/Final-Year-Project/FYP3/AwesomeProject/components/user/schedule/BookAppointment.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  Image,\r\n  TouchableOpacity,\r\n  Modal,\r\n  ScrollView,\r\n  TextInput,\r\n  KeyboardAvoidingView,\r\n  Alert,\r\n  Dimensions,\r\n  Linking\r\n} from \"react-native\";\r\nimport Header from \"./Header\";\r\nimport { FlatList } from \"react-native\";\r\nimport CommonBtn from \"./CommonBtn\";\r\nimport { useRoute } from \"@react-navigation/native\";\r\nimport axios from \"axios\";\r\nimport myURL from \"../../../services/myurls\";\r\nimport MapView, { Marker, PROVIDER_GOOGLE } from \"react-native-maps\";\r\n\r\n// GET => Clicked Clinic name , clinic vaccine registered, \r\n// post => clinic id, vaccine name, data , slot, user_id & name, cnic \r\n// post => clinic id, vaccine name, date , slot, name, cnic \r\nconst BookAppointment = ({ navigation }) => {\r\n  const route = useRoute();\r\n\r\n  let clinic = route.params?.clinicName;\r\n  let clinic_ID = route.params?.clinic_ID;\r\n  let my_ID = route.params?.user;\r\n  let clinic_my_ID = route.params?.clinic_my_ID;\r\n  let longi = route.params?.longitude;\r\n  let lati = route.params?.latitude;\r\n  let Schedulesource = route.params?.Schedulesource;\r\n\r\n  let cnic,username_from_child,vaccinename;\r\n\r\n\r\n  if(Schedulesource == \"childTrackPath\"){\r\n    cnic = route.params?.cnic;\r\n    username_from_child = route.params?.username_from_child;\r\n    vaccinename = route.params?.vaccinename;\r\n    console.log(`Navigation source: CNIN ${Schedulesource} : ${username_from_child}`);\r\n\r\n  }else{\r\n    console.log(`Navigation source: ${Schedulesource}`);\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  console.log(\"location \" +typeof parseFloat(longi) + \" \" +typeof parseFloat(lati) );\r\n  console.log(\" User_id ===>\" +my_ID + \" my_clinic_ID\"+clinic_my_ID);\r\n  // const mydata = [\r\n  //   {id:'kdfjkld',vaccine_name:'Hep B',description:'haha',price:'$10',img:'no',},\r\n  //   {id:'kdfjkld',vaccine_name:'DPT',description:'haha',price:'$10',img:'no',},\r\n  //   {id:'kdfjkld',vaccine_name:'Rabies',description:'haha',price:'$10',img:'no',},\r\n  //   {id:'kdfjkld',vaccine_name:'Polio',description:'haha',price:'$10',img:'no',},\r\n  //   {id:'kdfjkld',vaccine_name:'Hep A',description:'haha',price:'$10',img:'no',},\r\n  // ]\r\n\r\n  const clinicLocation = {\r\n    latitude: parseFloat(lati), // Dummy latitude for clinic location\r\n    longitude: parseFloat(longi), // Dummy longitude for clinic location\r\n  };\r\n\r\n  const [selectedSlot, setSelectedSlot] = useState(-1);\r\n  const [selectedVaccine, setSelectedVaccine] = useState(vaccinename? vaccinename : null);\r\n  const [selectedDay, setSelectedDay] = useState(-1);\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [patientName, setPatientName] = useState(username_from_child? username_from_child : \"\");\r\n  const [cnicNumber, setCnicNumber] = useState(cnic?cnic:'');\r\n  const [status, setStatus] = useState(\"pending\");\r\n//  const [currentTime, setCurrentTime] = useState(\"\");\r\n\r\n  const [isDateSelected, setIsDateSelected] = useState(false);\r\n  const [isSlotSelected, setIsSlotSelected] = useState(false);\r\n  const [isNameEntered, setIsNameEntered] = useState(false);\r\n  const [isCnicEntered, setIsCnicEntered] = useState(false);\r\n  const [mydata,setMydata] = useState([]);\r\n\r\n  const [mapRegion, setmapRegion] = useState({\r\n    latitude: 31.5204,\r\n    longitude: 74.3587,\r\n    latitudeDelta: 0.0122,\r\n    longitudeDelta: 0.0121,\r\n  });\r\n\r\n  const [slots, setSlots] = useState([\r\n    { sloT: \"10:00-12:00PM\", selected: false },\r\n    { sloT: \"12:00-02:00PM\", selected: false },\r\n    { sloT: \"02:00-04:00PM\", selected: false },\r\n    { sloT: \"04:00-06:00PM\", selected: false },\r\n    { sloT: \"06:00-08:00PM\", selected: false },\r\n    { sloT: \"08:00-10:00PM\", selected: false },\r\n    { sloT: \"08:00-10:00PM\", selected: false },\r\n  ]);\r\n  const [days, setDays] = useState([]);\r\n  useEffect(() => {\r\n    getVaccineRecord();\r\n    let DaysList = [];\r\n    for (let i = 1; i <= getDays(new Date().getMonth() + 1); i++) {\r\n      DaysList.push({ day: i, selected: false });\r\n    }\r\n    setDays(DaysList);\r\n  }, []);\r\n\r\n    const getVaccineRecord = () => {\r\n    \r\n      axios\r\n        .get(`${myURL}/clinic/VaccineRecord/ID?my_ID=${clinic_my_ID}`)\r\n        .then((res) => {\r\n          console.log(\"match User ID\" + res.data);\r\n          setMydata(res.data);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n      \r\n  }\r\n\r\n  const getDays = (month) => {\r\n    let days = 0;\r\n    if (month == 1) {\r\n      days = 31;\r\n    } else if (month == 2) {\r\n      days = 28;\r\n    } else if (month == 3) {\r\n      days = 31;\r\n    } else if (month == 4) {\r\n      days = 30;\r\n    } else if (month == 5) {\r\n      days = 31;\r\n    } else if (month == 6) {\r\n      days = 30;\r\n    } else if (month == 7) {\r\n      days = 31;\r\n    } else if (month == 8) {\r\n      days = 31;\r\n    } else if (month == 9) {\r\n      days = 30;\r\n    } else if (month == 10) {\r\n      days = 31;\r\n    } else if (month == 11) {\r\n      days = 30;\r\n    } else if (month == 12) {\r\n      days = 31;\r\n    }\r\n    return days;\r\n  };\r\n\r\n  console.log(\"----->> \" + typeof my_ID,typeof selectedVaccine,typeof selectedDay,typeof selectedSlot,typeof patientName,typeof cnicNumber);\r\n  const vaccineOptions = [\"Polio\", \"Hep A\", \"Hep B\", \"Influenza\", \"Monococcal\"];\r\n\r\n  const handleConfirmVaccination = (vaccine) => {\r\n    setModalVisible(false);\r\n    setSelectedVaccine(vaccine);\r\n  };\r\n\r\n  const formatCnic = (input) => {\r\n    let cnic = input.replace(/\\D/g, \"\");\r\n\r\n    if (cnic.length > 5) {\r\n      cnic =\r\n        cnic.substring(0, 5) +\r\n        \"-\" +\r\n        cnic.substring(5, 12) +\r\n        \"-\" +\r\n        cnic.substring(12, 13);\r\n    } else if (cnic.length > 5 && cnic.length <= 12) {\r\n      cnic = cnic.substring(0, 5) + \"-\" + cnic.substring(5, 12);\r\n    }\r\n\r\n    setCnicNumber(cnic);\r\n  };\r\n\r\n  const handleBookAppointment = () => {\r\n    setIsDateSelected(false);\r\n    setIsSlotSelected(false);\r\n    setIsNameEntered(false);\r\n    setIsCnicEntered(false);\r\n\r\n    const nameRegex = /^[^\\d]+$/;\r\n    if (!nameRegex.test(patientName)) {\r\n      setIsNameEntered(true);\r\n      Alert.alert(\"Error\", \"Please enter patient name in alphabets\");\r\n      return;\r\n    }\r\n\r\n    const cnicRegex = /^([0-9]{5})[\\-]([0-9]{7})[\\-]([0-9]{1})+/;\r\n    if (!cnicRegex.test(cnicNumber)) {\r\n      setIsCnicEntered(true);\r\n      Alert.alert(\"Error\", \"Please enter a valid CNIC\");\r\n      return;\r\n    }\r\n\r\n    if (selectedDay === -1) {\r\n      setIsDateSelected(true);\r\n      Alert.alert(\"Error\", \"Please select a date\");\r\n      return;\r\n    }\r\n\r\n    if (selectedSlot === -1) {\r\n      setIsSlotSelected(true);\r\n      Alert.alert(\"Error\", \"Please select a slot\");\r\n      return;\r\n    }\r\n\r\n      // Create a new Date object to get the current date and time\r\n      const currentDate = new Date();\r\n\r\n      // Extract hours, minutes, and seconds\r\n      const hours = currentDate.getHours();\r\n      const minutes = currentDate.getMinutes();\r\n      const seconds = currentDate.getSeconds();\r\n\r\n      // Format the time as a string\r\n      const formattedTime = `${hours}:${minutes}:${seconds}`;\r\n\r\n      // Update the state with the current time\r\n      currentTime = formattedTime;\r\n\r\n    axios\r\n      .post(myURL+\"/user/scheduleAppointment/\", {my_ID,clinic_my_ID,selectedVaccine,selectedDay,selectedSlot,patientName,cnicNumber,currentTime,status})\r\n      .then((res) => {\r\n      console.log(res.data);\r\n      Alert.alert(\"BOOK SCHEDULE\");\r\n      navigation.navigate(\"Success\", {\r\n          selectedVaccine,\r\n          selectedDay: days[selectedDay].day,\r\n          selectedSlot: slots[selectedSlot].sloT,\r\n          patientName,\r\n          cnicNumber,\r\n      })\r\n      \r\n      // {Alert.alert(\"Hi\")}\r\n      })\r\n      .catch((err)=> {\r\n      console.log(err);\r\n      })\r\n\r\n      \r\n  \r\n\r\n  };\r\n\r\n  return (\r\n    // <KeyboardAvoidingView style={{ flex: 1 }} behavior=\"padding\" enabled>\r\n      <ScrollView\r\n       style={styles.container}\r\n        contentContainerStyle={styles.container}\r\n        keyboardShouldPersistTaps=\"handled\" \r\n        keyboardDismissMode=\"on-drag\" \r\n       > \r\n          <Header\r\n            icon={require(\"../../src/images/backbutton.png\")}\r\n            title={\"Book Appointment\"}\r\n            navigation={navigation}\r\n          />\r\n          <View style={{ borderRadius: 20, overflow: \"hidden\" }}>\r\n            <MapView\r\n              style={{\r\n                width: Dimensions.get(\"screen\").width * 1,\r\n                height: Dimensions.get(\"screen\").height * 0.25,\r\n                alignSelf: \"center\",\r\n                marginBottom: 10,\r\n              }}\r\n              provider={PROVIDER_GOOGLE}\r\n              showsUserLocation={true}\r\n              followsUserLocation={true}\r\n              region={mapRegion}\r\n            >\r\n              <Marker\r\n                coordinate={{\r\n                  latitude: clinicLocation.latitude,\r\n                  longitude: clinicLocation.longitude,\r\n                }}\r\n                title=\"Clinic Name\"\r\n                description=\"Address\"\r\n              />\r\n            </MapView>\r\n            <TouchableOpacity\r\n              onPress={() =>\r\n                Linking.openURL(\r\n                  `https://www.google.com/maps/dir/?api=1&destination=${clinicLocation.latitude},${clinicLocation.longitude}`\r\n                )\r\n              }\r\n            >\r\n              <Text style={styles.directions}>Get Directions</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n\r\n          <Image source={require(\"../../src/images/vac.png\")} style={styles.cliImg} />\r\n          <Text style={styles.name}>{clinic}</Text>\r\n\r\n          <TouchableOpacity\r\n            onPress={() => setModalVisible(true)}\r\n            style={styles.dropdownButton}\r\n          >\r\n            <Text style={styles.dropdownButtonText}>Available Vaccines</Text>\r\n          </TouchableOpacity>\r\n\r\n          <Modal animationType=\"slide\" transparent={true} visible={modalVisible}>\r\n            <View style={styles.centeredView}>\r\n              <View style={styles.modalView}>\r\n                {mydata.map((vaccine, index) => (\r\n                  <TouchableOpacity\r\n                    key={index}\r\n                    onPress={() => handleConfirmVaccination(vaccine.vaccine_name)}\r\n                  >\r\n                    <Text style={styles.modalText}>{vaccine.vaccine_name}</Text>\r\n                  </TouchableOpacity>\r\n                ))}\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          <Text style={styles.selectedVaccine}>{selectedVaccine}</Text>\r\n          <Text style={styles.date}>Select Date</Text>\r\n\r\n      <Text>{/* Change this to a regular View */}</Text>\r\n        <View style={styles.innerContainer}>\r\n          <Text>{/* ... Rest of your code ... */}</Text>\r\n          <View>\r\n            <FlatList\r\n              horizontal\r\n              showsHorizontalScrollIndicator={false}\r\n              data={days}\r\n              keyExtractor={(item, index) => index.toString()} \r\n              renderItem={({ item, index }) => {\r\n                return (\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      width: 50,\r\n                      height: 60,\r\n                      borderRadius: 50,\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      backgroundColor:\r\n                        selectedDay == index ? \"#329998\" : \"#fff\",\r\n                      borderWidth: selectedDay == index ? 0 : 1,\r\n                      borderColor: \"#f2f2f2f2\",\r\n                      marginLeft: 10,\r\n                    }}\r\n                    onPress={() => {\r\n                      if (item.day < new Date().getDate()) {\r\n                      } else {\r\n                        setSelectedDay(index);\r\n                      }\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        color: selectedDay == index ? \"#fff\" : \"#329998\",\r\n                        fontWeight: \"bold\",\r\n                        flexWrap:'wrap'\r\n                      }}\r\n                    >\r\n                      {item.day}\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n                );\r\n              }}\r\n            />\r\n          </View>\r\n          <Text style={styles.heading}>Available Slots</Text>\r\n          <View style={{flexDirection:'row',flexWrap:'wrap'}}>\r\n              {/* {if(selectedDay)} */}\r\n\r\n          {\r\n            slots.map((item,index)=>(\r\n                  <TouchableOpacity\r\n                    key={index}\r\n                    style={[\r\n                      styles.timeSlot,\r\n                      {\r\n                        borderColor: selectedSlot == index ? \"blue\" : \"black\",\r\n                      },\r\n                    ]}\r\n                    onPress={() => {\r\n                      setSelectedSlot(index);\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        color: selectedSlot == index ? \"blue\" : \"black\",\r\n                      }}\r\n                    >\r\n                      {item.sloT}\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n            ))\r\n          }\r\n          </View>\r\n          <Text style={styles.heading}>Patient Name</Text>\r\n          <TextInput\r\n            style={styles.nameInput}\r\n            placeholder={\"Enter Patients Name\"}\r\n            value={patientName}\r\n            onChangeText={setPatientName}\r\n          />\r\n          <Text style={styles.heading}>Enter CNIC Number</Text>\r\n          <TextInput\r\n            style={styles.nameInput}\r\n            placeholder={\"Enter Patients CNIC Number\"}\r\n            value={cnicNumber}\r\n            onChangeText={formatCnic}\r\n          />\r\n          <View style={{ marginTop: 20, marginBottom: 20 }}>\r\n            <CommonBtn\r\n              w={100}\r\n              h={45}\r\n              txt={\"Book Now\"}\r\n              status={true}\r\n              onClick={handleBookAppointment}\r\n            />\r\n          </View>\r\n        </View>\r\n      </ScrollView>\r\n    // </KeyboardAvoidingView>\r\n  );\r\n};\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexGrow: 1,\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  innerContainer: {\r\n    padding: 20,\r\n  },\r\n  cliImg: {\r\n    width: 100,\r\n    height: 100,\r\n    marginTop: 50,\r\n    alignSelf: \"center\",\r\n  },\r\n  name: {\r\n    fontSize: 20,\r\n    fontWeight: \"700\",\r\n    alignSelf: \"center\",\r\n    marginTop: 10,\r\n  },\r\n  dropdownButton: {\r\n    marginTop: 10,\r\n    alignSelf: \"center\",\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 20,\r\n    backgroundColor: \"#329998\",\r\n    borderRadius: 10,\r\n  },\r\n  dropdownButtonText: {\r\n    color: \"#fff\",\r\n    fontSize: 16,\r\n    fontWeight: \"bold\",\r\n  },\r\n  centeredView: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: 10,\r\n  },\r\n  modalView: {\r\n    margin: 10,\r\n    backgroundColor: \"white\",\r\n    borderRadius: 10,\r\n    padding: 35,\r\n    alignItems: \"center\",\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 4,\r\n    elevation: 5,\r\n  },\r\n  modalText: {\r\n    marginBottom: 15,\r\n    textAlign: \"center\",\r\n    fontSize: 18,\r\n  },\r\n  selectedVaccine: {\r\n    fontSize: 18,\r\n    alignSelf: \"center\",\r\n    marginTop: 10,\r\n  },\r\n  heading: {\r\n    color: \"#000\",\r\n    fontSize: 18,\r\n    fontWeight: \"700\",\r\n    marginTop: 15,\r\n    marginLeft: 15,\r\n  },\r\n  timeSlot: {\r\n    width: \"46%\",\r\n    height: 40,\r\n    borderRadius: 10,\r\n    borderWidth: 0.5,\r\n    margin: 6,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    \r\n  },\r\n  nameInput: {\r\n    borderRadius: 10,\r\n    marginTop: 10,\r\n    width: \"94%\",\r\n    height: 45,\r\n    borderWidth: 0.5,\r\n    alignSelf: \"center\",\r\n    paddingLeft: 20,\r\n  },\r\n  date: {\r\n    color: \"#000\",\r\n    fontSize: 18,\r\n    fontWeight: \"700\",\r\n    marginTop: 5,\r\n    marginLeft: 15,\r\n    marginBottom: 5,\r\n  },\r\n  errorText: {\r\n    color: \"red\",\r\n    marginTop: 5,\r\n    marginLeft: 15,\r\n    fontSize: 16,\r\n  },\r\n  directions: {\r\n    textAlign: \"center\",\r\n    color: \"#329998\",\r\n    fontSize: 16,\r\n    textDecorationLine: \"underline\",\r\n    marginTop: 10,\r\n  },\r\n});\r\n\r\nexport default BookAppointment;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}