{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport NativeFileReaderModule from \"./NativeFileReaderModule\";\nvar EventTarget = require('event-target-shim');\nvar READER_EVENTS = ['abort', 'error', 'load', 'loadstart', 'loadend', 'progress'];\nvar EMPTY = 0;\nvar LOADING = 1;\nvar DONE = 2;\nvar FileReader = function (_ref) {\n  _inherits(FileReader, _ref);\n  var _super = _createSuper(FileReader);\n  function FileReader() {\n    var _this;\n    _classCallCheck(this, FileReader);\n    _this = _super.call(this);\n    _this.EMPTY = EMPTY;\n    _this.LOADING = LOADING;\n    _this.DONE = DONE;\n    _this._aborted = false;\n    _this._reset();\n    return _this;\n  }\n  _createClass(FileReader, [{\n    key: \"_reset\",\n    value: function _reset() {\n      this._readyState = EMPTY;\n      this._error = null;\n      this._result = null;\n    }\n  }, {\n    key: \"_setReadyState\",\n    value: function _setReadyState(newState) {\n      this._readyState = newState;\n      this.dispatchEvent({\n        type: 'readystatechange'\n      });\n      if (newState === DONE) {\n        if (this._aborted) {\n          this.dispatchEvent({\n            type: 'abort'\n          });\n        } else if (this._error) {\n          this.dispatchEvent({\n            type: 'error'\n          });\n        } else {\n          this.dispatchEvent({\n            type: 'load'\n          });\n        }\n        this.dispatchEvent({\n          type: 'loadend'\n        });\n      }\n    }\n  }, {\n    key: \"readAsArrayBuffer\",\n    value: function readAsArrayBuffer() {\n      throw new Error('FileReader.readAsArrayBuffer is not implemented');\n    }\n  }, {\n    key: \"readAsDataURL\",\n    value: function readAsDataURL(blob) {\n      var _this2 = this;\n      this._aborted = false;\n      if (blob == null) {\n        throw new TypeError(\"Failed to execute 'readAsDataURL' on 'FileReader': parameter 1 is not of type 'Blob'\");\n      }\n      NativeFileReaderModule.readAsDataURL(blob.data).then(function (text) {\n        if (_this2._aborted) {\n          return;\n        }\n        _this2._result = text;\n        _this2._setReadyState(DONE);\n      }, function (error) {\n        if (_this2._aborted) {\n          return;\n        }\n        _this2._error = error;\n        _this2._setReadyState(DONE);\n      });\n    }\n  }, {\n    key: \"readAsText\",\n    value: function readAsText(blob) {\n      var _this3 = this;\n      var encoding = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'UTF-8';\n      this._aborted = false;\n      if (blob == null) {\n        throw new TypeError(\"Failed to execute 'readAsText' on 'FileReader': parameter 1 is not of type 'Blob'\");\n      }\n      NativeFileReaderModule.readAsText(blob.data, encoding).then(function (text) {\n        if (_this3._aborted) {\n          return;\n        }\n        _this3._result = text;\n        _this3._setReadyState(DONE);\n      }, function (error) {\n        if (_this3._aborted) {\n          return;\n        }\n        _this3._error = error;\n        _this3._setReadyState(DONE);\n      });\n    }\n  }, {\n    key: \"abort\",\n    value: function abort() {\n      this._aborted = true;\n      if (this._readyState !== EMPTY && this._readyState !== DONE) {\n        this._reset();\n        this._setReadyState(DONE);\n      }\n      this._reset();\n    }\n  }, {\n    key: \"readyState\",\n    get: function get() {\n      return this._readyState;\n    }\n  }, {\n    key: \"error\",\n    get: function get() {\n      return this._error;\n    }\n  }, {\n    key: \"result\",\n    get: function get() {\n      return this._result;\n    }\n  }]);\n  return FileReader;\n}(EventTarget.apply(void 0, READER_EVENTS));\nFileReader.EMPTY = EMPTY;\nFileReader.LOADING = LOADING;\nFileReader.DONE = DONE;\nmodule.exports = FileReader;","map":{"version":3,"names":["NativeFileReaderModule","EventTarget","require","READER_EVENTS","EMPTY","LOADING","DONE","FileReader","_ref","_inherits","_super","_createSuper","_this","_classCallCheck","call","_aborted","_reset","_createClass","key","value","_readyState","_error","_result","_setReadyState","newState","dispatchEvent","type","readAsArrayBuffer","Error","readAsDataURL","blob","_this2","TypeError","data","then","text","error","readAsText","_this3","encoding","arguments","length","undefined","abort","get","apply","module","exports"],"sources":["E:/4 -ReactNative/Final-Year-Project/FYP3/AwesomeProject/node_modules/react-native/Libraries/Blob/FileReader.js"],"sourcesContent":["/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n * @format\r\n */\r\n\r\nimport type Blob from './Blob';\r\n\r\nimport NativeFileReaderModule from './NativeFileReaderModule';\r\n\r\nconst EventTarget = require('event-target-shim');\r\n\r\ntype ReadyState =\r\n  | 0 // EMPTY\r\n  | 1 // LOADING\r\n  | 2; // DONE\r\n\r\ntype ReaderResult = string | ArrayBuffer;\r\n\r\nconst READER_EVENTS = [\r\n  'abort',\r\n  'error',\r\n  'load',\r\n  'loadstart',\r\n  'loadend',\r\n  'progress',\r\n];\r\n\r\nconst EMPTY = 0;\r\nconst LOADING = 1;\r\nconst DONE = 2;\r\n\r\nclass FileReader extends (EventTarget(...READER_EVENTS): any) {\r\n  static EMPTY: number = EMPTY;\r\n  static LOADING: number = LOADING;\r\n  static DONE: number = DONE;\r\n\r\n  EMPTY: number = EMPTY;\r\n  LOADING: number = LOADING;\r\n  DONE: number = DONE;\r\n\r\n  _readyState: ReadyState;\r\n  _error: ?Error;\r\n  _result: ?ReaderResult;\r\n  _aborted: boolean = false;\r\n\r\n  constructor() {\r\n    super();\r\n    this._reset();\r\n  }\r\n\r\n  _reset(): void {\r\n    this._readyState = EMPTY;\r\n    this._error = null;\r\n    this._result = null;\r\n  }\r\n\r\n  _setReadyState(newState: ReadyState) {\r\n    this._readyState = newState;\r\n    this.dispatchEvent({type: 'readystatechange'});\r\n    if (newState === DONE) {\r\n      if (this._aborted) {\r\n        this.dispatchEvent({type: 'abort'});\r\n      } else if (this._error) {\r\n        this.dispatchEvent({type: 'error'});\r\n      } else {\r\n        this.dispatchEvent({type: 'load'});\r\n      }\r\n      this.dispatchEvent({type: 'loadend'});\r\n    }\r\n  }\r\n\r\n  readAsArrayBuffer(): any {\r\n    throw new Error('FileReader.readAsArrayBuffer is not implemented');\r\n  }\r\n\r\n  readAsDataURL(blob: ?Blob): void {\r\n    this._aborted = false;\r\n\r\n    if (blob == null) {\r\n      throw new TypeError(\r\n        \"Failed to execute 'readAsDataURL' on 'FileReader': parameter 1 is not of type 'Blob'\",\r\n      );\r\n    }\r\n\r\n    NativeFileReaderModule.readAsDataURL(blob.data).then(\r\n      (text: string) => {\r\n        if (this._aborted) {\r\n          return;\r\n        }\r\n        this._result = text;\r\n        this._setReadyState(DONE);\r\n      },\r\n      error => {\r\n        if (this._aborted) {\r\n          return;\r\n        }\r\n        this._error = error;\r\n        this._setReadyState(DONE);\r\n      },\r\n    );\r\n  }\r\n\r\n  readAsText(blob: ?Blob, encoding: string = 'UTF-8'): void {\r\n    this._aborted = false;\r\n\r\n    if (blob == null) {\r\n      throw new TypeError(\r\n        \"Failed to execute 'readAsText' on 'FileReader': parameter 1 is not of type 'Blob'\",\r\n      );\r\n    }\r\n\r\n    NativeFileReaderModule.readAsText(blob.data, encoding).then(\r\n      (text: string) => {\r\n        if (this._aborted) {\r\n          return;\r\n        }\r\n        this._result = text;\r\n        this._setReadyState(DONE);\r\n      },\r\n      error => {\r\n        if (this._aborted) {\r\n          return;\r\n        }\r\n        this._error = error;\r\n        this._setReadyState(DONE);\r\n      },\r\n    );\r\n  }\r\n\r\n  abort() {\r\n    this._aborted = true;\r\n    // only call onreadystatechange if there is something to abort, as per spec\r\n    if (this._readyState !== EMPTY && this._readyState !== DONE) {\r\n      this._reset();\r\n      this._setReadyState(DONE);\r\n    }\r\n    // Reset again after, in case modified in handler\r\n    this._reset();\r\n  }\r\n\r\n  get readyState(): ReadyState {\r\n    return this._readyState;\r\n  }\r\n\r\n  get error(): ?Error {\r\n    return this._error;\r\n  }\r\n\r\n  get result(): ?ReaderResult {\r\n    return this._result;\r\n  }\r\n}\r\n\r\nmodule.exports = FileReader;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}