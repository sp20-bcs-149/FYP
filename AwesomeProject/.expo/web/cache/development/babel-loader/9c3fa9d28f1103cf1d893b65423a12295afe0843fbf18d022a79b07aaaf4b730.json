{"ast":null,"code":"'use strict';\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar ReactNativeStyleAttributes = require(\"../Components/View/ReactNativeStyleAttributes\");\nvar resolveAssetSource = require(\"../Image/resolveAssetSource\");\nvar processColor = require(\"../StyleSheet/processColor\");\nvar processColorArray = require(\"../StyleSheet/processColorArray\");\nvar insetsDiffer = require(\"../Utilities/differ/insetsDiffer\");\nvar matricesDiffer = require(\"../Utilities/differ/matricesDiffer\");\nvar pointsDiffer = require(\"../Utilities/differ/pointsDiffer\");\nvar sizesDiffer = require(\"../Utilities/differ/sizesDiffer\");\nvar UIManager = require(\"./UIManager\");\nvar invariant = require('invariant');\nfunction getNativeComponentAttributes(uiViewClassName) {\n  var _bubblingEventTypes, _directEventTypes;\n  var viewConfig = UIManager.getViewManagerConfig(uiViewClassName);\n  invariant(viewConfig != null && viewConfig.NativeProps != null, 'requireNativeComponent: \"%s\" was not found in the UIManager.', uiViewClassName);\n  var baseModuleName = viewConfig.baseModuleName,\n    bubblingEventTypes = viewConfig.bubblingEventTypes,\n    directEventTypes = viewConfig.directEventTypes;\n  var nativeProps = viewConfig.NativeProps;\n  bubblingEventTypes = (_bubblingEventTypes = bubblingEventTypes) != null ? _bubblingEventTypes : {};\n  directEventTypes = (_directEventTypes = directEventTypes) != null ? _directEventTypes : {};\n  while (baseModuleName) {\n    var baseModule = UIManager.getViewManagerConfig(baseModuleName);\n    if (!baseModule) {\n      baseModuleName = null;\n    } else {\n      bubblingEventTypes = _objectSpread(_objectSpread({}, baseModule.bubblingEventTypes), bubblingEventTypes);\n      directEventTypes = _objectSpread(_objectSpread({}, baseModule.directEventTypes), directEventTypes);\n      nativeProps = _objectSpread(_objectSpread({}, baseModule.NativeProps), nativeProps);\n      baseModuleName = baseModule.baseModuleName;\n    }\n  }\n  var validAttributes = {};\n  for (var key in nativeProps) {\n    var typeName = nativeProps[key];\n    var diff = getDifferForType(typeName);\n    var process = getProcessorForType(typeName);\n    validAttributes[key] = diff == null ? process == null ? true : {\n      process: process\n    } : process == null ? {\n      diff: diff\n    } : {\n      diff: diff,\n      process: process\n    };\n  }\n  validAttributes.style = ReactNativeStyleAttributes;\n  Object.assign(viewConfig, {\n    uiViewClassName: uiViewClassName,\n    validAttributes: validAttributes,\n    bubblingEventTypes: bubblingEventTypes,\n    directEventTypes: directEventTypes\n  });\n  attachDefaultEventTypes(viewConfig);\n  return viewConfig;\n}\nfunction attachDefaultEventTypes(viewConfig) {\n  var constants = UIManager.getConstants();\n  if (constants.ViewManagerNames || constants.LazyViewManagersEnabled) {\n    viewConfig = merge(viewConfig, UIManager.getDefaultEventTypes());\n  } else {\n    viewConfig.bubblingEventTypes = merge(viewConfig.bubblingEventTypes, constants.genericBubblingEventTypes);\n    viewConfig.directEventTypes = merge(viewConfig.directEventTypes, constants.genericDirectEventTypes);\n  }\n}\nfunction merge(destination, source) {\n  if (!source) {\n    return destination;\n  }\n  if (!destination) {\n    return source;\n  }\n  for (var key in source) {\n    if (!source.hasOwnProperty(key)) {\n      continue;\n    }\n    var sourceValue = source[key];\n    if (destination.hasOwnProperty(key)) {\n      var destinationValue = destination[key];\n      if (typeof sourceValue === 'object' && typeof destinationValue === 'object') {\n        sourceValue = merge(destinationValue, sourceValue);\n      }\n    }\n    destination[key] = sourceValue;\n  }\n  return destination;\n}\nfunction getDifferForType(typeName) {\n  switch (typeName) {\n    case 'CATransform3D':\n      return matricesDiffer;\n    case 'CGPoint':\n      return pointsDiffer;\n    case 'CGSize':\n      return sizesDiffer;\n    case 'UIEdgeInsets':\n      return insetsDiffer;\n    case 'Point':\n      return pointsDiffer;\n    case 'EdgeInsets':\n      return insetsDiffer;\n  }\n  return null;\n}\nfunction getProcessorForType(typeName) {\n  switch (typeName) {\n    case 'CGColor':\n    case 'UIColor':\n      return processColor;\n    case 'CGColorArray':\n    case 'UIColorArray':\n      return processColorArray;\n    case 'CGImage':\n    case 'UIImage':\n    case 'RCTImageSource':\n      return resolveAssetSource;\n    case 'Color':\n      return processColor;\n    case 'ColorArray':\n      return processColorArray;\n    case 'ImageSource':\n      return resolveAssetSource;\n  }\n  return null;\n}\nmodule.exports = getNativeComponentAttributes;","map":{"version":3,"names":["_defineProperty","require","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","ReactNativeStyleAttributes","resolveAssetSource","processColor","processColorArray","insetsDiffer","matricesDiffer","pointsDiffer","sizesDiffer","UIManager","invariant","getNativeComponentAttributes","uiViewClassName","_bubblingEventTypes","_directEventTypes","viewConfig","getViewManagerConfig","NativeProps","baseModuleName","bubblingEventTypes","directEventTypes","nativeProps","baseModule","validAttributes","typeName","diff","getDifferForType","process","getProcessorForType","style","assign","attachDefaultEventTypes","constants","getConstants","ViewManagerNames","LazyViewManagersEnabled","merge","getDefaultEventTypes","genericBubblingEventTypes","genericDirectEventTypes","destination","hasOwnProperty","sourceValue","destinationValue","module","exports"],"sources":["E:/4 -ReactNative/Final-Year-Project/FYP3/AwesomeProject/node_modules/react-native/Libraries/ReactNative/getNativeComponentAttributes.js"],"sourcesContent":["/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n * @format\r\n */\r\n\r\n'use strict';\r\n\r\nconst ReactNativeStyleAttributes = require('../Components/View/ReactNativeStyleAttributes');\r\nconst resolveAssetSource = require('../Image/resolveAssetSource');\r\nconst processColor = require('../StyleSheet/processColor');\r\nconst processColorArray = require('../StyleSheet/processColorArray');\r\nconst insetsDiffer = require('../Utilities/differ/insetsDiffer');\r\nconst matricesDiffer = require('../Utilities/differ/matricesDiffer');\r\nconst pointsDiffer = require('../Utilities/differ/pointsDiffer');\r\nconst sizesDiffer = require('../Utilities/differ/sizesDiffer');\r\nconst UIManager = require('./UIManager');\r\nconst invariant = require('invariant');\r\n\r\nfunction getNativeComponentAttributes(uiViewClassName: string): any {\r\n  const viewConfig = UIManager.getViewManagerConfig(uiViewClassName);\r\n\r\n  invariant(\r\n    viewConfig != null && viewConfig.NativeProps != null,\r\n    'requireNativeComponent: \"%s\" was not found in the UIManager.',\r\n    uiViewClassName,\r\n  );\r\n\r\n  // TODO: This seems like a whole lot of runtime initialization for every\r\n  // native component that can be either avoided or simplified.\r\n  let {baseModuleName, bubblingEventTypes, directEventTypes} = viewConfig;\r\n  let nativeProps = viewConfig.NativeProps;\r\n\r\n  bubblingEventTypes = bubblingEventTypes ?? {};\r\n  directEventTypes = directEventTypes ?? {};\r\n\r\n  while (baseModuleName) {\r\n    const baseModule = UIManager.getViewManagerConfig(baseModuleName);\r\n    if (!baseModule) {\r\n      baseModuleName = null;\r\n    } else {\r\n      bubblingEventTypes = {\r\n        ...baseModule.bubblingEventTypes,\r\n        ...bubblingEventTypes,\r\n      };\r\n      directEventTypes = {\r\n        ...baseModule.directEventTypes,\r\n        ...directEventTypes,\r\n      };\r\n      nativeProps = {\r\n        ...baseModule.NativeProps,\r\n        ...nativeProps,\r\n      };\r\n      baseModuleName = baseModule.baseModuleName;\r\n    }\r\n  }\r\n\r\n  const validAttributes: {[string]: mixed} = {};\r\n\r\n  for (const key in nativeProps) {\r\n    const typeName = nativeProps[key];\r\n    const diff = getDifferForType(typeName);\r\n    const process = getProcessorForType(typeName);\r\n\r\n    // If diff or process == null, omit the corresponding property from the Attribute\r\n    // Why:\r\n    //  1. Consistency with AttributeType flow type\r\n    //  2. Consistency with Static View Configs, which omit the null properties\r\n    validAttributes[key] =\r\n      diff == null\r\n        ? process == null\r\n          ? true\r\n          : {process}\r\n        : process == null\r\n        ? {diff}\r\n        : {diff, process};\r\n  }\r\n\r\n  // Unfortunately, the current setup declares style properties as top-level\r\n  // props. This makes it so we allow style properties in the `style` prop.\r\n  // TODO: Move style properties into a `style` prop and disallow them as\r\n  // top-level props on the native side.\r\n  validAttributes.style = ReactNativeStyleAttributes;\r\n\r\n  Object.assign(viewConfig, {\r\n    uiViewClassName,\r\n    validAttributes,\r\n    bubblingEventTypes,\r\n    directEventTypes,\r\n  });\r\n\r\n  attachDefaultEventTypes(viewConfig);\r\n\r\n  return viewConfig;\r\n}\r\n\r\nfunction attachDefaultEventTypes(viewConfig: any) {\r\n  // This is supported on UIManager platforms (ex: Android),\r\n  // as lazy view managers are not implemented for all platforms.\r\n  // See [UIManager] for details on constants and implementations.\r\n  const constants = UIManager.getConstants();\r\n  if (constants.ViewManagerNames || constants.LazyViewManagersEnabled) {\r\n    // Lazy view managers enabled.\r\n    viewConfig = merge(viewConfig, UIManager.getDefaultEventTypes());\r\n  } else {\r\n    viewConfig.bubblingEventTypes = merge(\r\n      viewConfig.bubblingEventTypes,\r\n      constants.genericBubblingEventTypes,\r\n    );\r\n    viewConfig.directEventTypes = merge(\r\n      viewConfig.directEventTypes,\r\n      constants.genericDirectEventTypes,\r\n    );\r\n  }\r\n}\r\n\r\n// TODO: Figure out how to avoid all this runtime initialization cost.\r\nfunction merge(destination: ?Object, source: ?Object): ?Object {\r\n  if (!source) {\r\n    return destination;\r\n  }\r\n  if (!destination) {\r\n    return source;\r\n  }\r\n\r\n  for (const key in source) {\r\n    if (!source.hasOwnProperty(key)) {\r\n      continue;\r\n    }\r\n\r\n    let sourceValue = source[key];\r\n    if (destination.hasOwnProperty(key)) {\r\n      const destinationValue = destination[key];\r\n      if (\r\n        typeof sourceValue === 'object' &&\r\n        typeof destinationValue === 'object'\r\n      ) {\r\n        sourceValue = merge(destinationValue, sourceValue);\r\n      }\r\n    }\r\n    destination[key] = sourceValue;\r\n  }\r\n  return destination;\r\n}\r\n\r\nfunction getDifferForType(\r\n  typeName: string,\r\n): ?(prevProp: any, nextProp: any) => boolean {\r\n  switch (typeName) {\r\n    // iOS Types\r\n    case 'CATransform3D':\r\n      return matricesDiffer;\r\n    case 'CGPoint':\r\n      return pointsDiffer;\r\n    case 'CGSize':\r\n      return sizesDiffer;\r\n    case 'UIEdgeInsets':\r\n      return insetsDiffer;\r\n    // Android Types\r\n    case 'Point':\r\n      return pointsDiffer;\r\n    case 'EdgeInsets':\r\n      return insetsDiffer;\r\n  }\r\n  return null;\r\n}\r\n\r\nfunction getProcessorForType(typeName: string): ?(nextProp: any) => any {\r\n  switch (typeName) {\r\n    // iOS Types\r\n    case 'CGColor':\r\n    case 'UIColor':\r\n      return processColor;\r\n    case 'CGColorArray':\r\n    case 'UIColorArray':\r\n      return processColorArray;\r\n    case 'CGImage':\r\n    case 'UIImage':\r\n    case 'RCTImageSource':\r\n      return resolveAssetSource;\r\n    // Android Types\r\n    case 'Color':\r\n      return processColor;\r\n    case 'ColorArray':\r\n      return processColorArray;\r\n    case 'ImageSource':\r\n      return resolveAssetSource;\r\n  }\r\n  return null;\r\n}\r\n\r\nmodule.exports = getNativeComponentAttributes;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}